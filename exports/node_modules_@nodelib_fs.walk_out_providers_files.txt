=== Directory: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@nodelib\fs.walk\out\providers ===


================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@nodelib\fs.walk\out\providers\async.d.ts
================================================================================

import AsyncReader from '../readers/async';
import type Settings from '../settings';
import type { Entry, Errno } from '../types';
export declare type AsyncCallback = (error: Errno, entries: Entry[]) => void;
export default class AsyncProvider {
    private readonly _root;
    private readonly _settings;
    protected readonly _reader: AsyncReader;
    private readonly _storage;
    constructor(_root: string, _settings: Settings);
    read(callback: AsyncCallback): void;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@nodelib\fs.walk\out\providers\async.js
================================================================================

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const async_1 = require("../readers/async");
class AsyncProvider {
    constructor(_root, _settings) {
        this._root = _root;
        this._settings = _settings;
        this._reader = new async_1.default(this._root, this._settings);
        this._storage = [];
    }
    read(callback) {
        this._reader.onError((error) => {
            callFailureCallback(callback, error);
        });
        this._reader.onEntry((entry) => {
            this._storage.push(entry);
        });
        this._reader.onEnd(() => {
            callSuccessCallback(callback, this._storage);
        });
        this._reader.read();
    }
}
exports.default = AsyncProvider;
function callFailureCallback(callback, error) {
    callback(error);
}
function callSuccessCallback(callback, entries) {
    callback(null, entries);
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@nodelib\fs.walk\out\providers\index.d.ts
================================================================================

import AsyncProvider from './async';
import StreamProvider from './stream';
import SyncProvider from './sync';
export { AsyncProvider, StreamProvider, SyncProvider };

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@nodelib\fs.walk\out\providers\index.js
================================================================================

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SyncProvider = exports.StreamProvider = exports.AsyncProvider = void 0;
const async_1 = require("./async");
exports.AsyncProvider = async_1.default;
const stream_1 = require("./stream");
exports.StreamProvider = stream_1.default;
const sync_1 = require("./sync");
exports.SyncProvider = sync_1.default;

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@nodelib\fs.walk\out\providers\stream.d.ts
================================================================================

/// <reference types="node" />
import { Readable } from 'stream';
import AsyncReader from '../readers/async';
import type Settings from '../settings';
export default class StreamProvider {
    private readonly _root;
    private readonly _settings;
    protected readonly _reader: AsyncReader;
    protected readonly _stream: Readable;
    constructor(_root: string, _settings: Settings);
    read(): Readable;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@nodelib\fs.walk\out\providers\stream.js
================================================================================

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const stream_1 = require("stream");
const async_1 = require("../readers/async");
class StreamProvider {
    constructor(_root, _settings) {
        this._root = _root;
        this._settings = _settings;
        this._reader = new async_1.default(this._root, this._settings);
        this._stream = new stream_1.Readable({
            objectMode: true,
            read: () => { },
            destroy: () => {
                if (!this._reader.isDestroyed) {
                    this._reader.destroy();
                }
            }
        });
    }
    read() {
        this._reader.onError((error) => {
            this._stream.emit('error', error);
        });
        this._reader.onEntry((entry) => {
            this._stream.push(entry);
        });
        this._reader.onEnd(() => {
            this._stream.push(null);
        });
        this._reader.read();
        return this._stream;
    }
}
exports.default = StreamProvider;

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@nodelib\fs.walk\out\providers\sync.d.ts
================================================================================

import SyncReader from '../readers/sync';
import type Settings from '../settings';
import type { Entry } from '../types';
export default class SyncProvider {
    private readonly _root;
    private readonly _settings;
    protected readonly _reader: SyncReader;
    constructor(_root: string, _settings: Settings);
    read(): Entry[];
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@nodelib\fs.walk\out\providers\sync.js
================================================================================

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const sync_1 = require("../readers/sync");
class SyncProvider {
    constructor(_root, _settings) {
        this._root = _root;
        this._settings = _settings;
        this._reader = new sync_1.default(this._root, this._settings);
    }
    read() {
        return this._reader.read();
    }
}
exports.default = SyncProvider;
