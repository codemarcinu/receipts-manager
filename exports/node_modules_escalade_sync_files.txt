=== Directory: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\escalade\sync ===


================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\escalade\sync\index.d.mts
================================================================================

export type Callback = (
	directory: string,
	files: string[],
) => string | false | void;

export default function (
	directory: string,
	callback: Callback,
): string | void;

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\escalade\sync\index.d.ts
================================================================================

declare namespace escalade {
	export type Callback = (
		directory: string,
		files: string[],
	) => string | false | void;
}

declare function escalade(
	directory: string,
	callback: escalade.Callback,
): string | void;

export = escalade;

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\escalade\sync\index.js
================================================================================

const { dirname, resolve } = require('path');
const { readdirSync, statSync } = require('fs');

module.exports = function (start, callback) {
	let dir = resolve('.', start);
	let tmp, stats = statSync(dir);

	if (!stats.isDirectory()) {
		dir = dirname(dir);
	}

	while (true) {
		tmp = callback(dir, readdirSync(dir));
		if (tmp) return resolve(dir, tmp);
		dir = dirname(tmp = dir);
		if (tmp === dir) break;
	}
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\escalade\sync\index.mjs
================================================================================

import { dirname, resolve } from 'path';
import { readdirSync, statSync } from 'fs';

export default function (start, callback) {
	let dir = resolve('.', start);
	let tmp, stats = statSync(dir);

	if (!stats.isDirectory()) {
		dir = dirname(dir);
	}

	while (true) {
		tmp = callback(dir, readdirSync(dir));
		if (tmp) return resolve(dir, tmp);
		dir = dirname(tmp = dir);
		if (tmp === dir) break;
	}
}
