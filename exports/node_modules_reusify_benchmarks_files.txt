=== Directory: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\reusify\benchmarks ===


================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\reusify\benchmarks\createNoCodeFunction.js
================================================================================

'use strict'

var fib = require('./fib')
var max = 100000000
var start = Date.now()

// create a funcion with the typical error
// pattern, that delegates the heavy load
// to something else
function createNoCodeFunction () {
  /* eslint no-constant-condition: "off" */
  var num = 100

  ;(function () {
    if (null) {
      // do nothing
    } else {
      fib(num)
    }
  })()
}

for (var i = 0; i < max; i++) {
  createNoCodeFunction()
}

var time = Date.now() - start
console.log('Total time', time)
console.log('Total iterations', max)
console.log('Iteration/s', max / time * 1000)

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\reusify\benchmarks\fib.js
================================================================================

'use strict'

function fib (num) {
  var fib = []

  fib[0] = 0
  fib[1] = 1
  for (var i = 2; i <= num; i++) {
    fib[i] = fib[i - 2] + fib[i - 1]
  }
}

module.exports = fib

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\reusify\benchmarks\reuseNoCodeFunction.js
================================================================================

'use strict'

var reusify = require('../')
var fib = require('./fib')
var instance = reusify(MyObject)
var max = 100000000
var start = Date.now()

function reuseNoCodeFunction () {
  var obj = instance.get()
  obj.num = 100
  obj.func()
  obj.num = 0
  instance.release(obj)
}

function MyObject () {
  this.next = null
  var that = this
  this.num = 0
  this.func = function () {
    /* eslint no-constant-condition: "off" */
    if (null) {
      // do nothing
    } else {
      fib(that.num)
    }
  }
}

for (var i = 0; i < max; i++) {
  reuseNoCodeFunction()
}

var time = Date.now() - start
console.log('Total time', time)
console.log('Total iterations', max)
console.log('Iteration/s', max / time * 1000)
