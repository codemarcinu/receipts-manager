=== Directory: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens ===


================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_index.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@forward './md-comp-assist-chip' as md-comp-assist-chip-*;
@forward './md-comp-badge' as md-comp-badge-*;
@forward './md-comp-checkbox' as md-comp-checkbox-*;
@forward './md-comp-circular-progress' as md-comp-circular-progress-*;
@forward './md-comp-dialog' as md-comp-dialog-*;
@forward './md-comp-divider' as md-comp-divider-*;
@forward './md-comp-elevated-button' as md-comp-elevated-button-*;
@forward './md-comp-elevated-card' as md-comp-elevated-card-*;
@forward './md-comp-elevation' as md-comp-elevation-*;
@forward './md-comp-fab' as md-comp-fab-*;
@forward './md-comp-fab-branded' as md-comp-fab-branded-*;
@forward './md-comp-filled-button' as md-comp-filled-button-*;
@forward './md-comp-filled-card' as md-comp-filled-card-*;
@forward './md-comp-filled-field' as md-comp-filled-field-*;
@forward './md-comp-filled-icon-button' as md-comp-filled-icon-button-*;
@forward './md-comp-filled-select' as md-comp-filled-select-*;
@forward './md-comp-filled-text-field' as md-comp-filled-text-field-*;
@forward './md-comp-filled-tonal-button' as md-comp-filled-tonal-button-*;
@forward './md-comp-filled-tonal-icon-button' as
  md-comp-filled-tonal-icon-button-*;
@forward './md-comp-filter-chip' as md-comp-filter-chip-*;
@forward './md-comp-focus-ring' as md-comp-focus-ring-*;
@forward './md-comp-full-screen-dialog' as md-comp-full-screen-dialog-*;
@forward './md-comp-icon' as md-comp-icon-*;
@forward './md-comp-icon-button' as md-comp-icon-button-*;
@forward './md-comp-input-chip' as md-comp-input-chip-*;
@forward './md-comp-item' as md-comp-item-*;
@forward './md-comp-linear-progress' as md-comp-linear-progress-*;
@forward './md-comp-list' as md-comp-list-*;
@forward './md-comp-list-item' as md-comp-list-item-*;
@forward './md-comp-menu' as md-comp-menu-*;
@forward './md-comp-menu-item' as md-comp-menu-item-*;
@forward './md-comp-navigation-bar' as md-comp-navigation-bar-*;
@forward './md-comp-navigation-drawer' as md-comp-navigation-drawer-*;
@forward './md-comp-outlined-button' as md-comp-outlined-button-*;
@forward './md-comp-outlined-card' as md-comp-outlined-card-*;
@forward './md-comp-outlined-field' as md-comp-outlined-field-*;
@forward './md-comp-outlined-icon-button' as md-comp-outlined-icon-button-*;
@forward './md-comp-outlined-segmented-button' as
  md-comp-outlined-segmented-button-*;
@forward './md-comp-outlined-select' as md-comp-outlined-select-*;
@forward './md-comp-outlined-text-field' as md-comp-outlined-text-field-*;
@forward './md-comp-primary-tab' as md-comp-primary-tab-*;
@forward './md-comp-radio' as md-comp-radio-*;
@forward './md-comp-ripple' as md-comp-ripple-*;
@forward './md-comp-secondary-tab' as md-comp-secondary-tab-*;
@forward './md-comp-slider' as md-comp-slider-*;
@forward './md-comp-suggestion-chip' as md-comp-suggestion-chip-*;
@forward './md-comp-switch' as md-comp-switch-*;
@forward './md-comp-test-table' as md-comp-test-table-*;
@forward './md-comp-text-button' as md-comp-text-button-*;
@forward './md-ref-palette' as md-ref-palette-*;
@forward './md-ref-typeface' as md-ref-typeface-*;
@forward './md-sys-color' as md-sys-color-*;
@forward './md-sys-elevation' as md-sys-elevation-*;
@forward './md-sys-motion' as md-sys-motion-*;
@forward './md-sys-shape' as md-sys-shape-*;
@forward './md-sys-state' as md-sys-state-*;
@forward './md-sys-typescale' as md-sys-typescale-*;
// go/keep-sorted end

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-assist-chip.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-assist-chip';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-height',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'disabled-label-text-color',
  'disabled-label-text-opacity',
  'disabled-leading-icon-color',
  'disabled-leading-icon-opacity',
  'disabled-outline-color',
  'disabled-outline-opacity',
  'elevated-container-color',
  'elevated-container-elevation',
  'elevated-container-shadow-color',
  'elevated-disabled-container-color',
  'elevated-disabled-container-elevation',
  'elevated-disabled-container-opacity',
  'elevated-focus-container-elevation',
  'elevated-hover-container-elevation',
  'elevated-pressed-container-elevation',
  'focus-label-text-color',
  'focus-leading-icon-color',
  'focus-outline-color',
  'hover-label-text-color',
  'hover-leading-icon-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-label-space',
  'icon-size',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'leading-icon-color',
  'leading-space',
  'outline-color',
  'outline-width',
  'pressed-label-text-color',
  'pressed-leading-icon-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'trailing-space',
  'with-leading-icon-leading-space',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'container-elevation',
  'dragged-container-elevation',
  'dragged-label-text-color',
  'dragged-leading-icon-color',
  'dragged-state-layer-color',
  'dragged-state-layer-opacity',
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'label-text-tracking',
  'label-text-type',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-assist-chip.values($deps, $exclude-hardcoded-values);
  $new-tokens: map.merge(
    shape.get-new-logical-shape-tokens($tokens, 'container-shape'),
    (
      'leading-space': if($exclude-hardcoded-values, null, 16px),
      'trailing-space': if($exclude-hardcoded-values, null, 16px),
      'icon-label-space': if($exclude-hardcoded-values, null, 8px),
      'with-leading-icon-leading-space':
        if($exclude-hardcoded-values, null, 8px),
    )
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove "flat-*" prefix (b/275577569)
      'flat-container-elevation': 'container-elevation',
      'flat-disabled-outline-color': 'disabled-outline-color',
      'flat-disabled-outline-opacity': 'disabled-outline-opacity',
      'flat-focus-outline-color': 'focus-outline-color',
      'flat-outline-color': 'outline-color',
      'flat-outline-width': 'outline-width',
      // Remove "with-*" prefixes (b/273534858)
      // Rename "icon" to "leading-icon" (b/275577569)
      'with-icon-disabled-icon-color': 'disabled-leading-icon-color',
      'with-icon-disabled-icon-opacity': 'disabled-leading-icon-opacity',
      'with-icon-dragged-icon-color': 'dragged-leading-icon-color',
      'with-icon-focus-icon-color': 'focus-leading-icon-color',
      'with-icon-hover-icon-color': 'hover-leading-icon-color',
      'with-icon-icon-color': 'leading-icon-color',
      'with-icon-icon-size': 'icon-size',
      'with-icon-pressed-icon-color': 'pressed-leading-icon-color'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-assist-chip-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-assist-chip-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-badge.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-typescale';
@use './v0_192/md-comp-badge';
// go/keep-sorted end

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

$_unsupported-tokens: ('large-label-text-tracking', 'large-label-text-type');

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-badge.values($deps, $exclude-hardcoded-values);
  $tokens: map.remove($tokens, $_unsupported-tokens...);

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set($tokens, $token, var(--md-badge-#{$token}, #{$value}));
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-checkbox.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-state';
@use './v0_192/md-comp-checkbox';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'container-size',
  'disabled-container-opacity',
  'disabled-outline-color',
  'disabled-outline-width',
  'focus-outline-color',
  'focus-outline-width',
  'hover-outline-color',
  'hover-outline-width',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-size',
  'outline-color',
  'outline-width',
  'pressed-outline-color',
  'pressed-outline-width',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'selected-container-color',
  'selected-disabled-container-color',
  'selected-disabled-container-opacity',
  'selected-disabled-icon-color',
  'selected-focus-container-color',
  'selected-focus-icon-color',
  'selected-hover-container-color',
  'selected-hover-icon-color',
  'selected-hover-state-layer-color',
  'selected-hover-state-layer-opacity',
  'selected-icon-color',
  'selected-pressed-container-color',
  'selected-pressed-icon-color',
  'selected-pressed-state-layer-color',
  'selected-pressed-state-layer-opacity',
  'state-layer-shape',
  'state-layer-size',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'error-focus-outline-color',
  'error-focus-state-layer-color',
  'error-focus-state-layer-opacity',
  'error-hover-outline-color',
  'error-hover-state-layer-color',
  'error-hover-state-layer-opacity',
  'error-outline-color',
  'error-pressed-outline-color',
  'error-pressed-state-layer-color',
  'error-pressed-state-layer-opacity',
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'selected-disabled-container-outline-width',
  'selected-error-container-color',
  'selected-error-focus-container-color',
  'selected-error-focus-icon-color',
  'selected-error-hover-container-color',
  'selected-error-hover-icon-color',
  'selected-error-icon-color',
  'selected-error-pressed-container-color',
  'selected-error-pressed-icon-color',
  'selected-focus-outline-width',
  'selected-focus-state-layer-color',
  'selected-focus-state-layer-opacity',
  'selected-hover-outline-width',
  'selected-outline-width',
  'selected-pressed-outline-width',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-checkbox.values($deps, $exclude-hardcoded-values);
  $new-tokens: shape.get-new-logical-shape-tokens($tokens, 'container-shape');

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove default "unselected" prefix (b/292244480)
      'unselected-disabled-container-opacity': 'disabled-container-opacity',
      'unselected-disabled-outline-color': 'disabled-outline-color',
      'unselected-disabled-outline-width': 'disabled-outline-width',
      'unselected-error-focus-outline-color': 'error-focus-outline-color',
      'unselected-error-hover-outline-color': 'error-hover-outline-color',
      'unselected-error-outline-color': 'error-outline-color',
      'unselected-error-pressed-outline-color': 'error-pressed-outline-color',
      'unselected-focus-outline-color': 'focus-outline-color',
      'unselected-focus-outline-width': 'focus-outline-width',
      'unselected-hover-outline-color': 'hover-outline-color',
      'unselected-hover-outline-width': 'hover-outline-width',
      'unselected-hover-state-layer-color': 'hover-state-layer-color',
      'unselected-hover-state-layer-opacity': 'hover-state-layer-opacity',
      'unselected-outline-color': 'outline-color',
      'unselected-outline-width': 'outline-width',
      'unselected-pressed-outline-color': 'pressed-outline-color',
      'unselected-pressed-outline-width': 'pressed-outline-width',
      'unselected-pressed-state-layer-color': 'pressed-state-layer-color',
      'unselected-pressed-state-layer-opacity': 'pressed-state-layer-opacity',
      'unselected-focus-state-layer-color': 'focus-state-layer-color',
      'unselected-focus-state-layer-opacity': 'focus-state-layer-opacity'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-checkbox-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-checkbox-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-circular-progress.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:math';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './v0_192/md-comp-circular-progress-indicator';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'active-indicator-color',
  'active-indicator-width',
  'four-color-active-indicator-four-color',
  'four-color-active-indicator-one-color',
  'four-color-active-indicator-three-color',
  'four-color-active-indicator-two-color',
  'size',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  // must be circular
  'active-indicator-shape',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: validate.values(
    md-comp-circular-progress-indicator.values(
      $deps,
      $exclude-hardcoded-values
    ),
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens
  );

  @if not $exclude-hardcoded-values {
    // must be set as a raw % for compatibility between rendering border or svg.
    $width: map.get($tokens, 'active-indicator-width');
    $size: map.get($tokens, 'size');
    $container-padding: 4px;
    $size-without-padding: $size - $container-padding - $container-padding;
    $tokens: map.set(
      $tokens,
      'active-indicator-width',
      math.div($width, $size-without-padding) * 100
    );
  }

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set(
        $tokens,
        $token,
        var(--md-circular-progress-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-dialog.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-dialog';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-color',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'headline-color',
  'headline-font',
  'headline-line-height',
  'headline-size',
  'headline-weight',
  'icon-color',
  'icon-size',
  'supporting-text-color',
  'supporting-text-font',
  'supporting-text-line-height',
  'supporting-text-size',
  'supporting-text-weight',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

// Note: currently ignoring tokens for `action-*-label-text` and
// `action-*-state-layer` since actions are spec'd as standard text buttons.
$unsupported-tokens: (
  // go/keep-sorted start
  'action-focus-label-text-color',
  'action-focus-state-layer-color',
  'action-focus-state-layer-opacity',
  'action-hover-label-text-color',
  'action-hover-state-layer-color',
  'action-hover-state-layer-opacity',
  'action-label-text-color',
  'action-label-text-font',
  'action-label-text-line-height',
  'action-label-text-size',
  'action-label-text-tracking',
  'action-label-text-type',
  'action-label-text-weight',
  'action-pressed-label-text-color',
  'action-pressed-state-layer-color',
  'action-pressed-state-layer-opacity',
  'container-elevation',
  // Unused without a shadow color
  'headline-tracking',
  'headline-type',
  'supporting-text-tracking',
  'supporting-text-type',
  // go/keep-sorted end
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-dialog.values($deps, $exclude-hardcoded-values);
  $new-tokens: shape.get-new-logical-shape-tokens($tokens, 'container-shape');
  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove "with-*" prefixes (b/273534858)
      'with-icon-icon-color': 'icon-color',
      'with-icon-icon-size': 'icon-size'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-dialog-container-shape, #{$value});
      }

      $tokens: map.set($tokens, $token, var(--md-dialog-#{$token}, #{$value}));
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-divider.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './v0_192/md-comp-divider';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'color',
  'thickness',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: validate.values(
    md-comp-divider.values($deps, $exclude-hardcoded-values),
    $supported-tokens: $supported-tokens
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set($tokens, $token, var(--md-divider-#{$token}, #{$value}));
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-elevated-button.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-elevated-button';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-color',
  'container-elevation',
  'container-height',
  'container-shadow-color',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'disabled-container-color',
  'disabled-container-elevation',
  'disabled-container-opacity',
  'disabled-icon-color',
  'disabled-icon-opacity',
  'disabled-label-text-color',
  'disabled-label-text-opacity',
  'focus-container-elevation',
  'focus-icon-color',
  'focus-label-text-color',
  'hover-container-elevation',
  'hover-icon-color',
  'hover-label-text-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'leading-space',
  'pressed-container-elevation',
  'pressed-icon-color',
  'pressed-label-text-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'trailing-space',
  'with-leading-icon-leading-space',
  'with-leading-icon-trailing-space',
  'with-trailing-icon-leading-space',
  'with-trailing-icon-trailing-space',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'label-text-tracking',
  'label-text-type',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-elevated-button.values($deps, $exclude-hardcoded-values);
  $new-tokens: map.merge(
    shape.get-new-logical-shape-tokens($tokens, 'container-shape'),
    (
      // b/198759625 - Remove once spacing tokens are formally added
      // go/keep-sorted start
      'leading-space': if($exclude-hardcoded-values, null, 24px),
      'trailing-space': if($exclude-hardcoded-values, null, 24px),
      'with-leading-icon-leading-space':
        if($exclude-hardcoded-values, null, 16px),
      'with-leading-icon-trailing-space':
        if($exclude-hardcoded-values, null, 24px),
      'with-trailing-icon-leading-space':
        if($exclude-hardcoded-values, null, 24px),
      'with-trailing-icon-trailing-space':
        if($exclude-hardcoded-values, null, 16px),
      // go/keep-sorted end
    )
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove "with-*" prefixes (b/273534858)
      'with-icon-disabled-icon-color': 'disabled-icon-color',
      'with-icon-disabled-icon-opacity': 'disabled-icon-opacity',
      'with-icon-focus-icon-color': 'focus-icon-color',
      'with-icon-hover-icon-color': 'hover-icon-color',
      'with-icon-icon-color': 'icon-color',
      'with-icon-icon-size': 'icon-size',
      'with-icon-pressed-icon-color': 'pressed-icon-color'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-elevated-button-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-elevated-button-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-elevated-card.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './v0_192/md-comp-elevated-card';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-color',
  'container-elevation',
  'container-shadow-color',
  'container-shape',
  // go/keep-sorted end
);

// TODO(b/307362112): Add interactive card tokens (hover, focus, pressed)
// TODO(b/307361748): Add disabled cards tokens.
$unsupported-tokens: (
  // go/keep-sorted start
  'disabled-container-color',
  'disabled-container-elevation',
  'disabled-container-opacity',
  'dragged-container-elevation',
  'dragged-state-layer-color',
  'dragged-state-layer-opacity',
  'focus-container-elevation',
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'hover-container-elevation',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'pressed-container-elevation',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: validate.values(
    md-comp-elevated-card.values($deps, $exclude-hardcoded-values),
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set(
        $tokens,
        $token,
        var(--md-elevated-card-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-elevation.scss
================================================================================

//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'level',
  'shadow-color',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: (
    'level': map.get($deps, 'md-sys-elevation', 'level0'),
    'shadow-color': map.get($deps, 'md-sys-color', 'shadow'),
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set(
        $tokens,
        $token,
        var(--md-elevation-#{$token}, #{$value})
      );
    }
  }

  @return validate.values($tokens, $supported-tokens: $supported-tokens);
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-fab-branded.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-extended-fab-branded';
@use './v0_192/md-comp-fab-branded';
@use './v0_192/md-comp-fab-branded-large';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-color',
  'container-elevation',
  'container-height',
  'container-shadow-color',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'container-width',
  'focus-container-elevation',
  'focus-label-text-color',
  'hover-container-elevation',
  'hover-label-text-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-size',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'large-container-height',
  'large-container-shape',
  'large-container-shape-end-end',
  'large-container-shape-end-start',
  'large-container-shape-start-end',
  'large-container-shape-start-start',
  'large-container-width',
  'large-icon-size',
  'lowered-container-color',
  'lowered-container-elevation',
  'lowered-focus-container-elevation',
  'lowered-hover-container-elevation',
  'lowered-pressed-container-elevation',
  'pressed-container-elevation',
  'pressed-label-text-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  // go/keep-sorted end
);

@function _get-new-tokens($deps, $exclude-hardcoded-values) {
  $large-tokens: md-comp-fab-branded-large.values(
    $deps,
    $exclude-hardcoded-values
  );
  $extended-branded-tokens: md-comp-extended-fab-branded.values(
    $deps,
    $exclude-hardcoded-values
  );

  @return (
    'focus-label-text-color':
      map.get($extended-branded-tokens, 'focus-label-text-color'),
    'hover-label-text-color':
      map.get($extended-branded-tokens, 'hover-label-text-color'),
    'label-text-color': map.get($extended-branded-tokens, 'label-text-color'),
    'label-text-font': map.get($extended-branded-tokens, 'label-text-font'),
    'label-text-size': map.get($extended-branded-tokens, 'label-text-size'),
    'label-text-line-height':
      map.get($extended-branded-tokens, 'label-text-line-height'),
    'label-text-weight': map.get($extended-branded-tokens, 'label-text-weight'),
    'large-container-height': map.get($large-tokens, 'container-height'),
    'large-container-shape': map.get($large-tokens, 'container-shape'),
    'large-container-width': map.get($large-tokens, 'container-width'),
    'large-icon-size': map.get($large-tokens, 'icon-size'),
    'pressed-label-text-color':
      map.get($extended-branded-tokens, 'pressed-label-text-color')
  );
}

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-fab-branded.values($deps, $exclude-hardcoded-values);
  $new-tokens: _get-new-tokens($deps, $exclude-hardcoded-values);
  $new-tokens: map.merge(
    $new-tokens,
    shape.get-new-logical-shape-tokens($tokens, 'container-shape')
  );

  $new-tokens: map.merge(
    $new-tokens,
    shape.get-new-logical-shape-tokens($new-tokens, 'large-container-shape')
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $shape-tokens: ('container-shape', 'large-container-shape');
      @each $shape-token in $shape-tokens {
        @if string.index($token, '#{$shape-token}-') == 1 {
          // Add fallback to shorthand for logical shape properties.
          $value: var(--md-fab-branded-#{$shape-token}, #{$value});
        }
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-fab-branded-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-fab.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-extended-fab-primary';
@use './v0_192/md-comp-extended-fab-secondary';
@use './v0_192/md-comp-extended-fab-surface';
@use './v0_192/md-comp-extended-fab-tertiary';
@use './v0_192/md-comp-fab-primary';
@use './v0_192/md-comp-fab-secondary';
@use './v0_192/md-comp-fab-surface';
@use './v0_192/md-comp-fab-surface-large';
@use './v0_192/md-comp-fab-surface-small';
@use './v0_192/md-comp-fab-tertiary';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-color',
  'container-elevation',
  'container-height',
  'container-shadow-color',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'container-width',
  'focus-container-elevation',
  'focus-icon-color',
  'focus-label-text-color',
  'hover-container-elevation',
  'hover-icon-color',
  'hover-label-text-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'large-container-height',
  'large-container-shape',
  'large-container-shape-end-end',
  'large-container-shape-end-start',
  'large-container-shape-start-end',
  'large-container-shape-start-start',
  'large-container-width',
  'large-icon-size',
  'lowered-container-color',
  'lowered-container-elevation',
  'lowered-focus-container-elevation',
  'lowered-hover-container-elevation',
  'lowered-pressed-container-elevation',
  'pressed-container-elevation',
  'pressed-icon-color',
  'pressed-label-text-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'primary-container-color',
  'primary-focus-icon-color',
  'primary-focus-label-text-color',
  'primary-hover-icon-color',
  'primary-hover-label-text-color',
  'primary-hover-state-layer-color',
  'primary-icon-color',
  'primary-label-text-color',
  'primary-pressed-icon-color',
  'primary-pressed-label-text-color',
  'primary-pressed-state-layer-color',
  'secondary-container-color',
  'secondary-focus-icon-color',
  'secondary-focus-label-text-color',
  'secondary-hover-icon-color',
  'secondary-hover-label-text-color',
  'secondary-hover-state-layer-color',
  'secondary-icon-color',
  'secondary-label-text-color',
  'secondary-pressed-icon-color',
  'secondary-pressed-label-text-color',
  'secondary-pressed-state-layer-color',
  'small-container-height',
  'small-container-shape',
  'small-container-shape-end-end',
  'small-container-shape-end-start',
  'small-container-shape-start-end',
  'small-container-shape-start-start',
  'small-container-width',
  'small-icon-size',
  'tertiary-container-color',
  'tertiary-focus-icon-color',
  'tertiary-focus-label-text-color',
  'tertiary-hover-icon-color',
  'tertiary-hover-label-text-color',
  'tertiary-hover-state-layer-color',
  'tertiary-icon-color',
  'tertiary-label-text-color',
  'tertiary-pressed-icon-color',
  'tertiary-pressed-label-text-color',
  'tertiary-pressed-state-layer-color',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  // go/keep-sorted end
);

@function _get-new-tokens($deps, $exclude-hardcoded-values) {
  $large-tokens: md-comp-fab-surface-large.values(
    $deps,
    $exclude-hardcoded-values
  );
  $small-tokens: md-comp-fab-surface-small.values(
    $deps,
    $exclude-hardcoded-values
  );
  $primary-tokens: md-comp-fab-primary.values($deps, $exclude-hardcoded-values);
  $secondary-tokens: md-comp-fab-secondary.values(
    $deps,
    $exclude-hardcoded-values
  );
  $tertiary-tokens: md-comp-fab-tertiary.values(
    $deps,
    $exclude-hardcoded-values
  );
  $extended-surface-tokens: md-comp-extended-fab-surface.values(
    $deps,
    $exclude-hardcoded-values
  );
  $extended-primary-tokens: md-comp-extended-fab-primary.values(
    $deps,
    $exclude-hardcoded-values
  );
  $extended-secondary-tokens: md-comp-extended-fab-secondary.values(
    $deps,
    $exclude-hardcoded-values
  );
  $extended-tertiary-tokens: md-comp-extended-fab-tertiary.values(
    $deps,
    $exclude-hardcoded-values
  );

  @return (
    // go/keep-sorted start
    'focus-label-text-color':
      map.get($extended-surface-tokens, 'focus-label-text-color'),
    'hover-label-text-color':
      map.get($extended-surface-tokens, 'hover-label-text-color'),
    'label-text-color': map.get($extended-surface-tokens, 'label-text-color'),
    'label-text-font': map.get($extended-surface-tokens, 'label-text-font'),
    'label-text-line-height':
      map.get($extended-surface-tokens, 'label-text-line-height'),
    'label-text-size': map.get($extended-surface-tokens, 'label-text-size'),
    'label-text-weight': map.get($extended-surface-tokens, 'label-text-weight'),
    'large-container-height': map.get($large-tokens, 'container-height'),
    'large-container-shape': map.get($large-tokens, 'container-shape'),
    'large-container-width': map.get($large-tokens, 'container-width'),
    'large-icon-size': map.get($large-tokens, 'icon-size'),
    'pressed-label-text-color':
      map.get($extended-surface-tokens, 'pressed-label-text-color'),
    'primary-container-color': map.get($primary-tokens, 'container-color'),
    'primary-focus-icon-color': map.get($primary-tokens, 'focus-icon-color'),
    'primary-focus-label-text-color':
      map.get($extended-primary-tokens, 'focus-label-text-color'),
    'primary-hover-icon-color': map.get($primary-tokens, 'hover-icon-color'),
    'primary-hover-label-text-color':
      map.get($extended-primary-tokens, 'hover-label-text-color'),
    'primary-hover-state-layer-color':
      map.get($primary-tokens, 'hover-state-layer-color'),
    'primary-icon-color': map.get($primary-tokens, 'icon-color'),
    'primary-label-text-color':
      map.get($extended-primary-tokens, 'label-text-color'),
    'primary-pressed-icon-color': map.get($primary-tokens, 'pressed-icon-color'),
    'primary-pressed-label-text-color':
      map.get($extended-primary-tokens, 'pressed-label-text-color'),
    'primary-pressed-state-layer-color':
      map.get($primary-tokens, 'pressed-state-layer-color'),
    'secondary-container-color': map.get($secondary-tokens, 'container-color'),
    'secondary-focus-icon-color': map.get($secondary-tokens, 'focus-icon-color'),
    'secondary-focus-label-text-color':
      map.get($extended-secondary-tokens, 'focus-label-text-color'),
    'secondary-hover-icon-color': map.get($secondary-tokens, 'hover-icon-color'),
    'secondary-hover-label-text-color':
      map.get($extended-secondary-tokens, 'hover-label-text-color'),
    'secondary-hover-state-layer-color':
      map.get($secondary-tokens, 'hover-state-layer-color'),
    'secondary-icon-color': map.get($secondary-tokens, 'icon-color'),
    'secondary-label-text-color':
      map.get($extended-secondary-tokens, 'label-text-color'),
    'secondary-pressed-icon-color':
      map.get($secondary-tokens, 'pressed-icon-color'),
    'secondary-pressed-label-text-color':
      map.get($extended-secondary-tokens, 'pressed-label-text-color'),
    'secondary-pressed-state-layer-color':
      map.get($secondary-tokens, 'pressed-state-layer-color'),
    'small-container-height': map.get($small-tokens, 'container-height'),
    'small-container-shape': map.get($small-tokens, 'container-shape'),
    'small-container-width': map.get($small-tokens, 'container-width'),
    'small-icon-size': map.get($small-tokens, 'icon-size'),
    'tertiary-container-color': map.get($tertiary-tokens, 'container-color'),
    'tertiary-focus-icon-color': map.get($tertiary-tokens, 'focus-icon-color'),
    'tertiary-focus-label-text-color':
      map.get($extended-tertiary-tokens, 'focus-label-text-color'),
    'tertiary-hover-icon-color': map.get($tertiary-tokens, 'hover-icon-color'),
    'tertiary-hover-label-text-color':
      map.get($extended-tertiary-tokens, 'hover-label-text-color'),
    'tertiary-hover-state-layer-color':
      map.get($tertiary-tokens, 'hover-state-layer-color'),
    'tertiary-icon-color': map.get($tertiary-tokens, 'icon-color'),
    'tertiary-label-text-color':
      map.get($extended-tertiary-tokens, 'label-text-color'),
    'tertiary-pressed-icon-color':
      map.get($tertiary-tokens, 'pressed-icon-color'),
    'tertiary-pressed-label-text-color':
      map.get($extended-tertiary-tokens, 'pressed-label-text-color'),
    'tertiary-pressed-state-layer-color':
      map.get($tertiary-tokens, 'pressed-state-layer-color'),
    // go/keep-sorted end
  );
}

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-fab-surface.values($deps, $exclude-hardcoded-values);
  $new-tokens: _get-new-tokens($deps, $exclude-hardcoded-values);
  $new-tokens: map.merge(
    $new-tokens,
    shape.get-new-logical-shape-tokens($tokens, 'container-shape')
  );

  $new-tokens: map.merge(
    $new-tokens,
    shape.get-new-logical-shape-tokens(
      $new-tokens,
      'large-container-shape',
      'small-container-shape'
    )
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $shape-tokens: (
        'container-shape',
        'large-container-shape',
        'small-container-shape'
      );

      @each $shape-token in $shape-tokens {
        @if string.index($token, '#{$shape-token}-') == 1 {
          // Add fallback to shorthand for logical shape properties.
          $value: var(--md-fab-#{$shape-token}, #{$value});
        }
      }

      $tokens: map.set($tokens, $token, var(--md-fab-#{$token}, #{$value}));
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-filled-button.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-filled-button';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-color',
  'container-elevation',
  'container-height',
  'container-shadow-color',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'disabled-container-color',
  'disabled-container-elevation',
  'disabled-container-opacity',
  'disabled-icon-color',
  'disabled-icon-opacity',
  'disabled-label-text-color',
  'disabled-label-text-opacity',
  'focus-container-elevation',
  'focus-icon-color',
  'focus-label-text-color',
  'hover-container-elevation',
  'hover-icon-color',
  'hover-label-text-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'leading-space',
  'pressed-container-elevation',
  'pressed-icon-color',
  'pressed-label-text-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'trailing-space',
  'with-leading-icon-leading-space',
  'with-leading-icon-trailing-space',
  'with-trailing-icon-leading-space',
  'with-trailing-icon-trailing-space',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'label-text-tracking',
  'label-text-type',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-filled-button.values($deps, $exclude-hardcoded-values);
  $new-tokens: map.merge(
    shape.get-new-logical-shape-tokens($tokens, 'container-shape'),
    (
      // b/198759625 - Remove once spacing tokens are formally added
      // go/keep-sorted start
      'leading-space': if($exclude-hardcoded-values, null, 24px),
      'trailing-space': if($exclude-hardcoded-values, null, 24px),
      'with-leading-icon-leading-space':
        if($exclude-hardcoded-values, null, 16px),
      'with-leading-icon-trailing-space':
        if($exclude-hardcoded-values, null, 24px),
      'with-trailing-icon-leading-space':
        if($exclude-hardcoded-values, null, 24px),
      'with-trailing-icon-trailing-space':
        if($exclude-hardcoded-values, null, 16px),
      // go/keep-sorted end
    )
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove "with-*" prefixes (b/273534858)
      'with-icon-disabled-icon-color': 'disabled-icon-color',
      'with-icon-disabled-icon-opacity': 'disabled-icon-opacity',
      'with-icon-focus-icon-color': 'focus-icon-color',
      'with-icon-hover-icon-color': 'hover-icon-color',
      'with-icon-icon-color': 'icon-color',
      'with-icon-icon-size': 'icon-size',
      'with-icon-pressed-icon-color': 'pressed-icon-color'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-filled-button-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-filled-button-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-filled-card.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './v0_192/md-comp-filled-card';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-color',
  'container-elevation',
  'container-shadow-color',
  'container-shape',
  // go/keep-sorted end
);

// TODO(b/307362112): Add interactive card tokens (hover, focus, pressed)
// TODO(b/307361748): Add disabled cards tokens.
$unsupported-tokens: (
  // go/keep-sorted start
  'disabled-container-color',
  'disabled-container-elevation',
  'disabled-container-opacity',
  'dragged-container-elevation',
  'dragged-state-layer-color',
  'dragged-state-layer-opacity',
  'focus-container-elevation',
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'hover-container-elevation',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'pressed-container-elevation',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: validate.values(
    md-comp-filled-card.values($deps, $exclude-hardcoded-values),
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set(
        $tokens,
        $token,
        var(--md-filled-card-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-filled-field.scss
================================================================================

//
// Copyright 2021 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-filled-text-field';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'active-indicator-color',
  'active-indicator-height',
  'bottom-space',
  'container-color',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'content-color',
  'content-font',
  'content-line-height',
  'content-size',
  'content-weight',
  'disabled-active-indicator-color',
  'disabled-active-indicator-height',
  'disabled-active-indicator-opacity',
  'disabled-container-color',
  'disabled-container-opacity',
  'disabled-content-color',
  'disabled-content-opacity',
  'disabled-label-text-color',
  'disabled-label-text-opacity',
  'disabled-leading-content-color',
  'disabled-leading-content-opacity',
  'disabled-supporting-text-color',
  'disabled-supporting-text-opacity',
  'disabled-trailing-content-color',
  'disabled-trailing-content-opacity',
  'error-active-indicator-color',
  'error-content-color',
  'error-focus-active-indicator-color',
  'error-focus-content-color',
  'error-focus-label-text-color',
  'error-focus-leading-content-color',
  'error-focus-supporting-text-color',
  'error-focus-trailing-content-color',
  'error-hover-active-indicator-color',
  'error-hover-content-color',
  'error-hover-label-text-color',
  'error-hover-leading-content-color',
  'error-hover-state-layer-color',
  'error-hover-state-layer-opacity',
  'error-hover-supporting-text-color',
  'error-hover-trailing-content-color',
  'error-label-text-color',
  'error-leading-content-color',
  'error-supporting-text-color',
  'error-trailing-content-color',
  'focus-active-indicator-color',
  'focus-active-indicator-height',
  'focus-content-color',
  'focus-label-text-color',
  'focus-leading-content-color',
  'focus-supporting-text-color',
  'focus-trailing-content-color',
  'hover-active-indicator-color',
  'hover-active-indicator-height',
  'hover-content-color',
  'hover-label-text-color',
  'hover-leading-content-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'hover-supporting-text-color',
  'hover-trailing-content-color',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-populated-line-height',
  'label-text-populated-size',
  'label-text-size',
  'label-text-weight',
  'leading-content-color',
  'leading-space',
  'supporting-text-color',
  'supporting-text-font',
  'supporting-text-leading-space',
  'supporting-text-line-height',
  'supporting-text-size',
  'supporting-text-top-space',
  'supporting-text-trailing-space',
  'supporting-text-weight',
  'top-space',
  'trailing-content-color',
  'trailing-space',
  'with-label-bottom-space',
  'with-label-top-space',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $text-field: md-comp-filled-text-field.values(
    $deps,
    $exclude-hardcoded-values
  );

  $tokens: (
    // go/keep-sorted start
    'active-indicator-color': map.get($text-field, 'active-indicator-color'),
    'active-indicator-height': map.get($text-field, 'active-indicator-height'),
    'bottom-space': if($exclude-hardcoded-values, null, 16px),
    'container-color': map.get($text-field, 'container-color'),
    'container-shape': map.get($text-field, 'container-shape'),
    'content-color': map.get($text-field, 'input-text-color'),
    'content-font': map.get($text-field, 'input-text-font'),
    'content-line-height': map.get($text-field, 'input-text-line-height'),
    'content-size': map.get($text-field, 'input-text-size'),
    'content-weight': map.get($text-field, 'input-text-weight'),
    'disabled-active-indicator-color':
      map.get($text-field, 'disabled-active-indicator-color'),
    'disabled-active-indicator-height':
      map.get($text-field, 'disabled-active-indicator-height'),
    'disabled-active-indicator-opacity':
      map.get($text-field, 'disabled-active-indicator-opacity'),
    'disabled-container-color': map.get($text-field, 'disabled-container-color'),
    'disabled-container-opacity':
      map.get($text-field, 'disabled-container-opacity'),
    'disabled-content-color': map.get($text-field, 'disabled-input-text-color'),
    'disabled-content-opacity':
      map.get($text-field, 'disabled-input-text-opacity'),
    'disabled-label-text-color':
      map.get($text-field, 'disabled-label-text-color'),
    'disabled-label-text-opacity':
      map.get($text-field, 'disabled-label-text-opacity'),
    'disabled-leading-content-color':
      map.get($text-field, 'disabled-leading-icon-color'),
    'disabled-leading-content-opacity':
      map.get($text-field, 'disabled-leading-icon-opacity'),
    'disabled-supporting-text-color':
      map.get($text-field, 'disabled-supporting-text-color'),
    'disabled-supporting-text-opacity':
      map.get($text-field, 'disabled-supporting-text-opacity'),
    'disabled-trailing-content-color':
      map.get($text-field, 'disabled-trailing-icon-color'),
    'disabled-trailing-content-opacity':
      map.get($text-field, 'disabled-trailing-icon-opacity'),
    'error-active-indicator-color':
      map.get($text-field, 'error-active-indicator-color'),
    'error-content-color': map.get($text-field, 'error-input-text-color'),
    'error-focus-active-indicator-color':
      map.get($text-field, 'error-focus-active-indicator-color'),
    'error-focus-content-color':
      map.get($text-field, 'error-focus-leading-icon-color'),
    'error-focus-label-text-color':
      map.get($text-field, 'error-focus-label-text-color'),
    'error-focus-leading-content-color':
      map.get($text-field, 'error-focus-leading-icon-color'),
    'error-focus-supporting-text-color':
      map.get($text-field, 'error-focus-supporting-text-color'),
    'error-focus-trailing-content-color':
      map.get($text-field, 'error-focus-trailing-icon-color'),
    'error-hover-active-indicator-color':
      map.get($text-field, 'error-hover-active-indicator-color'),
    'error-hover-content-color':
      map.get($text-field, 'error-hover-input-text-color'),
    'error-hover-label-text-color':
      map.get($text-field, 'error-hover-label-text-color'),
    'error-hover-leading-content-color':
      map.get($text-field, 'error-hover-leading-icon-color'),
    'error-hover-state-layer-color':
      map.get($text-field, 'error-hover-state-layer-color'),
    'error-hover-state-layer-opacity':
      map.get($text-field, 'error-hover-state-layer-opacity'),
    'error-hover-supporting-text-color':
      map.get($text-field, 'error-hover-supporting-text-color'),
    'error-hover-trailing-content-color':
      map.get($text-field, 'error-hover-trailing-icon-color'),
    'error-label-text-color': map.get($text-field, 'error-label-text-color'),
    'error-leading-content-color':
      map.get($text-field, 'error-leading-icon-color'),
    'error-supporting-text-color':
      map.get($text-field, 'error-supporting-text-color'),
    'error-trailing-content-color':
      map.get($text-field, 'error-trailing-icon-color'),
    'focus-active-indicator-color':
      map.get($text-field, 'focus-active-indicator-color'),
    // TODO(b/259455114): remove when focus tokens update to 3px
    'focus-active-indicator-height': if($exclude-hardcoded-values, null, 3px),
    'focus-content-color': map.get($text-field, 'focus-input-text-color'),
    'focus-label-text-color': map.get($text-field, 'focus-label-text-color'),
    'focus-leading-content-color':
      map.get($text-field, 'focus-leading-icon-color'),
    'focus-supporting-text-color':
      map.get($text-field, 'focus-supporting-text-color'),
    'focus-trailing-content-color':
      map.get($text-field, 'focus-trailing-icon-color'),
    'hover-active-indicator-color':
      map.get($text-field, 'hover-active-indicator-color'),
    'hover-active-indicator-height':
      map.get($text-field, 'hover-active-indicator-height'),
    'hover-content-color': map.get($text-field, 'hover-input-text-color'),
    'hover-label-text-color': map.get($text-field, 'hover-label-text-color'),
    'hover-leading-content-color':
      map.get($text-field, 'hover-leading-icon-color'),
    'hover-state-layer-color': map.get($text-field, 'hover-state-layer-color'),
    'hover-state-layer-opacity':
      map.get($text-field, 'hover-state-layer-opacity'),
    'hover-supporting-text-color':
      map.get($text-field, 'hover-supporting-text-color'),
    'hover-trailing-content-color':
      map.get($text-field, 'hover-trailing-icon-color'),
    'label-text-color': map.get($text-field, 'label-text-color'),
    'label-text-font': map.get($text-field, 'label-text-font'),
    'label-text-line-height': map.get($text-field, 'label-text-line-height'),
    'label-text-populated-line-height':
      map.get($text-field, 'label-text-populated-line-height'),
    'label-text-populated-size':
      map.get($text-field, 'label-text-populated-size'),
    'label-text-size': map.get($text-field, 'label-text-size'),
    'label-text-weight': map.get($text-field, 'label-text-weight'),
    'leading-content-color': map.get($text-field, 'leading-icon-color'),
    'leading-space': if($exclude-hardcoded-values, null, 16px),
    'supporting-text-color': map.get($text-field, 'supporting-text-color'),
    'supporting-text-font': map.get($text-field, 'supporting-text-font'),
    'supporting-text-leading-space': if($exclude-hardcoded-values, null, 16px),
    'supporting-text-line-height':
      map.get($text-field, 'supporting-text-line-height'),
    'supporting-text-size': map.get($text-field, 'supporting-text-size'),
    'supporting-text-top-space': if($exclude-hardcoded-values, null, 4px),
    'supporting-text-trailing-space': if($exclude-hardcoded-values, null, 16px),
    'supporting-text-weight': map.get($text-field, 'supporting-text-weight'),
    'top-space': if($exclude-hardcoded-values, null, 16px),
    'trailing-content-color': map.get($text-field, 'trailing-icon-color'),
    'trailing-space': if($exclude-hardcoded-values, null, 16px),
    'with-label-bottom-space': if($exclude-hardcoded-values, null, 8px),
    'with-label-top-space': if($exclude-hardcoded-values, null, 8px),
    // go/keep-sorted end
  );

  $new-tokens: shape.get-new-logical-shape-tokens($tokens, 'container-shape');
  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $new-tokens: $new-tokens
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-filled-field-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-filled-field-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-filled-icon-button.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-state';
@use './v0_192/md-comp-filled-icon-button';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-color',
  'container-height',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'container-width',
  'disabled-container-color',
  'disabled-container-opacity',
  'disabled-icon-color',
  'disabled-icon-opacity',
  'focus-icon-color',
  'hover-icon-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'pressed-icon-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'selected-container-color',
  'toggle-focus-icon-color',
  'toggle-hover-icon-color',
  'toggle-hover-state-layer-color',
  'toggle-icon-color',
  'toggle-pressed-icon-color',
  'toggle-pressed-state-layer-color',
  'toggle-selected-focus-icon-color',
  'toggle-selected-hover-icon-color',
  'toggle-selected-hover-state-layer-color',
  'toggle-selected-icon-color',
  'toggle-selected-pressed-icon-color',
  'toggle-selected-pressed-state-layer-color',
  // Note: filled icon buttons have three container colors,
  // "container-color" for regular, then selected/unselected for toggle.
  'unselected-container-color',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'toggle-focus-state-layer-color',
  'toggle-selected-focus-state-layer-color',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-filled-icon-button.values($deps, $exclude-hardcoded-values);
  $new-tokens: shape.get-new-logical-shape-tokens($tokens, 'container-shape');
  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove default "unselected" prefix (b/292244480)
      'toggle-unselected-focus-icon-color': 'toggle-focus-icon-color',
      'toggle-unselected-hover-icon-color': 'toggle-hover-icon-color',
      'toggle-unselected-hover-state-layer-color':
        'toggle-hover-state-layer-color',
      'toggle-unselected-icon-color': 'toggle-icon-color',
      'toggle-unselected-pressed-icon-color': 'toggle-pressed-icon-color',
      'toggle-unselected-pressed-state-layer-color':
        'toggle-pressed-state-layer-color',
      'toggle-unselected-focus-state-layer-color':
        'toggle-focus-state-layer-color'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-filled-icon-button-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-filled-icon-button-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-filled-select.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-filled-select';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'text-field-active-indicator-color',
  'text-field-active-indicator-height',
  'text-field-container-color',
  'text-field-container-shape',
  'text-field-container-shape-end-end',
  'text-field-container-shape-end-start',
  'text-field-container-shape-start-end',
  'text-field-container-shape-start-start',
  'text-field-disabled-active-indicator-color',
  'text-field-disabled-active-indicator-height',
  'text-field-disabled-active-indicator-opacity',
  'text-field-disabled-container-color',
  'text-field-disabled-container-opacity',
  'text-field-disabled-input-text-color',
  'text-field-disabled-input-text-opacity',
  'text-field-disabled-label-text-color',
  'text-field-disabled-label-text-opacity',
  'text-field-disabled-leading-icon-color',
  'text-field-disabled-leading-icon-opacity',
  'text-field-disabled-supporting-text-color',
  'text-field-disabled-supporting-text-opacity',
  'text-field-disabled-trailing-icon-color',
  'text-field-disabled-trailing-icon-opacity',
  'text-field-error-active-indicator-color',
  'text-field-error-focus-active-indicator-color',
  'text-field-error-focus-input-text-color',
  'text-field-error-focus-label-text-color',
  'text-field-error-focus-leading-icon-color',
  'text-field-error-focus-supporting-text-color',
  'text-field-error-focus-trailing-icon-color',
  'text-field-error-hover-active-indicator-color',
  'text-field-error-hover-input-text-color',
  'text-field-error-hover-label-text-color',
  'text-field-error-hover-leading-icon-color',
  'text-field-error-hover-state-layer-color',
  'text-field-error-hover-state-layer-opacity',
  'text-field-error-hover-supporting-text-color',
  'text-field-error-hover-trailing-icon-color',
  'text-field-error-input-text-color',
  'text-field-error-label-text-color',
  'text-field-error-leading-icon-color',
  'text-field-error-supporting-text-color',
  'text-field-error-trailing-icon-color',
  'text-field-focus-active-indicator-color',
  'text-field-focus-active-indicator-height',
  'text-field-focus-input-text-color',
  'text-field-focus-label-text-color',
  'text-field-focus-leading-icon-color',
  'text-field-focus-supporting-text-color',
  'text-field-focus-trailing-icon-color',
  'text-field-hover-active-indicator-color',
  'text-field-hover-active-indicator-height',
  'text-field-hover-input-text-color',
  'text-field-hover-label-text-color',
  'text-field-hover-leading-icon-color',
  'text-field-hover-state-layer-color',
  'text-field-hover-state-layer-opacity',
  'text-field-hover-supporting-text-color',
  'text-field-hover-trailing-icon-color',
  'text-field-input-text-color',
  'text-field-input-text-font',
  'text-field-input-text-line-height',
  'text-field-input-text-size',
  'text-field-input-text-weight',
  'text-field-label-text-color',
  'text-field-label-text-font',
  'text-field-label-text-line-height',
  'text-field-label-text-populated-line-height',
  'text-field-label-text-populated-size',
  'text-field-label-text-size',
  'text-field-label-text-weight',
  'text-field-leading-icon-color',
  'text-field-leading-icon-size',
  'text-field-supporting-text-color',
  'text-field-supporting-text-font',
  'text-field-supporting-text-line-height',
  'text-field-supporting-text-size',
  'text-field-supporting-text-weight',
  'text-field-trailing-icon-color',
  'text-field-trailing-icon-size',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'menu-cascading-menu-indicator-icon-color',
  'menu-cascading-menu-indicator-icon-size',
  'menu-container-color',
  'menu-container-elevation',
  'menu-container-shadow-color',
  'menu-container-shape',
  'menu-divider-color',
  'menu-divider-height',
  'menu-list-item-container-height',
  'menu-list-item-label-text-color',
  'menu-list-item-label-text-font',
  'menu-list-item-label-text-line-height',
  'menu-list-item-label-text-size',
  'menu-list-item-label-text-tracking',
  'menu-list-item-label-text-type',
  'menu-list-item-label-text-weight',
  'menu-list-item-selected-container-color',
  'menu-list-item-with-leading-icon-leading-icon-color',
  'menu-list-item-with-leading-icon-leading-icon-size',
  'menu-list-item-with-trailing-icon-trailing-icon-color',
  'menu-list-item-with-trailing-icon-trailing-icon-size',
  'text-field-input-text-tracking',
  'text-field-input-text-type',
  'text-field-label-text-tracking',
  'text-field-label-text-type',
  'text-field-supporting-text-tracking',
  'text-field-supporting-text-type',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function _get-override-tokens($exclude-hardcoded-values) {
  // Values pulled from b/198759625 spreadsheet
  @return (
    // go/keep-sorted start
    // TODO(b/259455114): remove when focus tokens update to 3px
    'text-field-focus-active-indicator-height':
      if($exclude-hardcoded-values, null, 3px),
    // go/keep-sorted end
  );
}

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $original-tokens: md-comp-filled-select.values(
    $deps,
    $exclude-hardcoded-values
  );
  $original-tokens: map.merge(
    $original-tokens,
    _get-override-tokens($exclude-hardcoded-values)
  );
  $new-tokens: shape.get-new-logical-shape-tokens(
    $original-tokens,
    'text-field-container-shape'
  );

  $tokens: validate.values(
    $original-tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'text-field-container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-filled-select-text-field-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-filled-select-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-filled-text-field.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-filled-text-field';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'active-indicator-color',
  'active-indicator-height',
  'bottom-space',
  'caret-color',
  'container-color',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'disabled-active-indicator-color',
  'disabled-active-indicator-height',
  'disabled-active-indicator-opacity',
  'disabled-container-color',
  'disabled-container-opacity',
  'disabled-input-text-color',
  'disabled-input-text-opacity',
  'disabled-label-text-color',
  'disabled-label-text-opacity',
  'disabled-leading-icon-color',
  'disabled-leading-icon-opacity',
  'disabled-supporting-text-color',
  'disabled-supporting-text-opacity',
  'disabled-trailing-icon-color',
  'disabled-trailing-icon-opacity',
  'error-active-indicator-color',
  'error-focus-active-indicator-color',
  'error-focus-caret-color',
  'error-focus-input-text-color',
  'error-focus-label-text-color',
  'error-focus-leading-icon-color',
  'error-focus-supporting-text-color',
  'error-focus-trailing-icon-color',
  'error-hover-active-indicator-color',
  'error-hover-input-text-color',
  'error-hover-label-text-color',
  'error-hover-leading-icon-color',
  'error-hover-state-layer-color',
  'error-hover-state-layer-opacity',
  'error-hover-supporting-text-color',
  'error-hover-trailing-icon-color',
  'error-input-text-color',
  'error-label-text-color',
  'error-leading-icon-color',
  'error-supporting-text-color',
  'error-trailing-icon-color',
  'focus-active-indicator-color',
  'focus-active-indicator-height',
  'focus-caret-color',
  'focus-input-text-color',
  'focus-label-text-color',
  'focus-leading-icon-color',
  'focus-supporting-text-color',
  'focus-trailing-icon-color',
  'hover-active-indicator-color',
  'hover-active-indicator-height',
  'hover-input-text-color',
  'hover-label-text-color',
  'hover-leading-icon-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'hover-supporting-text-color',
  'hover-trailing-icon-color',
  'input-text-color',
  'input-text-font',
  'input-text-line-height',
  'input-text-placeholder-color',
  'input-text-prefix-color',
  'input-text-prefix-trailing-space',
  'input-text-size',
  'input-text-suffix-color',
  'input-text-suffix-leading-space',
  'input-text-weight',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-populated-line-height',
  'label-text-populated-size',
  'label-text-size',
  'label-text-weight',
  'leading-icon-color',
  'leading-icon-size',
  'leading-space',
  'supporting-text-color',
  'supporting-text-font',
  'supporting-text-line-height',
  'supporting-text-size',
  'supporting-text-weight',
  'top-space',
  'trailing-icon-color',
  'trailing-icon-size',
  'trailing-space',
  'with-label-bottom-space',
  'with-label-top-space',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'input-text-tracking',
  'input-text-type',
  'label-text-tracking',
  'label-text-type',
  'supporting-text-tracking',
  'supporting-text-type',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-filled-text-field.values($deps, $exclude-hardcoded-values);
  $new-tokens: map.merge(
    shape.get-new-logical-shape-tokens($tokens, 'container-shape'),
    (
      'leading-space': if($exclude-hardcoded-values, null, 16px),
      'trailing-space': if($exclude-hardcoded-values, null, 16px),
      'top-space': if($exclude-hardcoded-values, null, 16px),
      'bottom-space': if($exclude-hardcoded-values, null, 16px),
      'input-text-prefix-trailing-space':
        if($exclude-hardcoded-values, null, 2px),
      'input-text-suffix-leading-space':
        if($exclude-hardcoded-values, null, 2px),
      'with-label-top-space': if($exclude-hardcoded-values, null, 8px),
      'with-label-bottom-space': if($exclude-hardcoded-values, null, 8px),
      // TODO(b/270705687): remove when focus-caret-color token added
      'focus-caret-color': map.get($deps, 'md-sys-color', 'primary'),
    )
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens
  );

  $tokens: map.merge(
    $tokens,
    (
      // TODO(b/259455114): remove when focus tokens update to 3px
      'focus-active-indicator-height': if($exclude-hardcoded-values, null, 3px)
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-filled-text-field-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-filled-text-field-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-filled-tonal-button.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-filled-tonal-button';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-color',
  'container-elevation',
  'container-height',
  'container-shadow-color',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'disabled-container-color',
  'disabled-container-elevation',
  'disabled-container-opacity',
  'disabled-icon-color',
  'disabled-icon-opacity',
  'disabled-label-text-color',
  'disabled-label-text-opacity',
  'focus-container-elevation',
  'focus-icon-color',
  'focus-label-text-color',
  'hover-container-elevation',
  'hover-icon-color',
  'hover-label-text-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'leading-space',
  'pressed-container-elevation',
  'pressed-icon-color',
  'pressed-label-text-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'trailing-space',
  'with-leading-icon-leading-space',
  'with-leading-icon-trailing-space',
  'with-trailing-icon-leading-space',
  'with-trailing-icon-trailing-space',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'label-text-tracking',
  'label-text-type',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-filled-tonal-button.values($deps, $exclude-hardcoded-values);
  $new-tokens: map.merge(
    shape.get-new-logical-shape-tokens($tokens, 'container-shape'),
    (
      // b/198759625 - Remove once spacing tokens are formally added
      // go/keep-sorted start
      'leading-space': if($exclude-hardcoded-values, null, 24px),
      'trailing-space': if($exclude-hardcoded-values, null, 24px),
      'with-leading-icon-leading-space':
        if($exclude-hardcoded-values, null, 16px),
      'with-leading-icon-trailing-space':
        if($exclude-hardcoded-values, null, 24px),
      'with-trailing-icon-leading-space':
        if($exclude-hardcoded-values, null, 24px),
      'with-trailing-icon-trailing-space':
        if($exclude-hardcoded-values, null, 16px),
      // go/keep-sorted end
    )
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove "with-*" prefixes (b/273534858)
      'with-icon-disabled-icon-color': 'disabled-icon-color',
      'with-icon-disabled-icon-opacity': 'disabled-icon-opacity',
      'with-icon-focus-icon-color': 'focus-icon-color',
      'with-icon-hover-icon-color': 'hover-icon-color',
      'with-icon-icon-color': 'icon-color',
      'with-icon-icon-size': 'icon-size',
      'with-icon-pressed-icon-color': 'pressed-icon-color'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-filled-tonal-button-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-filled-tonal-button-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-filled-tonal-icon-button.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-state';
@use './v0_192/md-comp-filled-tonal-icon-button';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-color',
  'container-height',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'container-width',
  'disabled-container-color',
  'disabled-container-opacity',
  'disabled-icon-color',
  'disabled-icon-opacity',
  'focus-icon-color',
  'hover-icon-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'pressed-icon-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'selected-container-color',
  'toggle-focus-icon-color',
  'toggle-hover-icon-color',
  'toggle-hover-state-layer-color',
  'toggle-icon-color',
  'toggle-pressed-icon-color',
  'toggle-pressed-state-layer-color',
  'toggle-selected-focus-icon-color',
  'toggle-selected-hover-icon-color',
  'toggle-selected-hover-state-layer-color',
  'toggle-selected-icon-color',
  'toggle-selected-pressed-icon-color',
  'toggle-selected-pressed-state-layer-color',
  // Note: filled icon buttons have three container colors,
  // "container-color" for regular, then selected/unselected for toggle.
  'unselected-container-color',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'toggle-focus-state-layer-color',
  'toggle-selected-focus-state-layer-color',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-filled-tonal-icon-button.values(
    $deps,
    $exclude-hardcoded-values
  );

  $new-tokens: shape.get-new-logical-shape-tokens($tokens, 'container-shape');
  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove default "unselected" prefix (b/292244480)
      'toggle-unselected-focus-icon-color': 'toggle-focus-icon-color',
      'toggle-unselected-hover-icon-color': 'toggle-hover-icon-color',
      'toggle-unselected-hover-state-layer-color':
        'toggle-hover-state-layer-color',
      'toggle-unselected-icon-color': 'toggle-icon-color',
      'toggle-unselected-pressed-icon-color': 'toggle-pressed-icon-color',
      'toggle-unselected-pressed-state-layer-color':
        'toggle-pressed-state-layer-color',
      'toggle-unselected-focus-state-layer-color':
        'toggle-focus-state-layer-color'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-filled-tonal-icon-button-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-filled-tonal-icon-button-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-filter-chip.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-filter-chip';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-height',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'disabled-label-text-color',
  'disabled-label-text-opacity',
  'disabled-leading-icon-color',
  'disabled-leading-icon-opacity',
  'disabled-outline-color',
  'disabled-outline-opacity',
  'disabled-selected-container-color',
  'disabled-selected-container-opacity',
  'disabled-trailing-icon-color',
  'disabled-trailing-icon-opacity',
  'elevated-container-color',
  'elevated-container-elevation',
  'elevated-container-shadow-color',
  'elevated-disabled-container-color',
  'elevated-disabled-container-elevation',
  'elevated-disabled-container-opacity',
  'elevated-focus-container-elevation',
  'elevated-hover-container-elevation',
  'elevated-pressed-container-elevation',
  'elevated-selected-container-color',
  'focus-label-text-color',
  'focus-leading-icon-color',
  'focus-outline-color',
  'focus-trailing-icon-color',
  'hover-label-text-color',
  'hover-leading-icon-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'hover-trailing-icon-color',
  'icon-label-space',
  'icon-size',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'leading-icon-color',
  'leading-space',
  'outline-color',
  'outline-width',
  'pressed-label-text-color',
  'pressed-leading-icon-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'pressed-trailing-icon-color',
  'selected-container-color',
  'selected-focus-label-text-color',
  'selected-focus-leading-icon-color',
  'selected-focus-trailing-icon-color',
  'selected-hover-label-text-color',
  'selected-hover-leading-icon-color',
  'selected-hover-state-layer-color',
  'selected-hover-state-layer-opacity',
  'selected-hover-trailing-icon-color',
  'selected-label-text-color',
  'selected-leading-icon-color',
  'selected-outline-width',
  'selected-pressed-label-text-color',
  'selected-pressed-leading-icon-color',
  'selected-pressed-state-layer-color',
  'selected-pressed-state-layer-opacity',
  'selected-pressed-trailing-icon-color',
  'selected-trailing-icon-color',
  'trailing-icon-color',
  'trailing-space',
  'with-leading-icon-leading-space',
  'with-trailing-icon-trailing-space',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'container-elevation',
  'dragged-container-elevation',
  'dragged-label-text-color',
  'dragged-leading-icon-color',
  'dragged-state-layer-color',
  'dragged-state-layer-opacity',
  'dragged-trailing-icon-color',
  'focus-container-elevation',
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'hover-container-elevation',
  'label-text-tracking',
  'label-text-type',
  'pressed-container-elevation',
  'selected-dragged-label-text-color',
  'selected-dragged-leading-icon-color',
  'selected-dragged-state-layer-color',
  'selected-dragged-state-layer-opacity',
  'selected-dragged-trailing-icon-color',
  'selected-focus-container-elevation',
  'selected-focus-state-layer-color',
  'selected-focus-state-layer-opacity',
  'selected-hover-container-elevation',
  'selected-pressed-container-elevation',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-filter-chip.values($deps, $exclude-hardcoded-values);
  $new-tokens: map.merge(
    shape.get-new-logical-shape-tokens($tokens, 'container-shape'),
    (
      'leading-space': if($exclude-hardcoded-values, null, 16px),
      'trailing-space': if($exclude-hardcoded-values, null, 16px),
      'icon-label-space': if($exclude-hardcoded-values, null, 8px),
      'with-leading-icon-leading-space':
        if($exclude-hardcoded-values, null, 8px),
      'with-trailing-icon-trailing-space':
        if($exclude-hardcoded-values, null, 8px),
    )
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove "unselected-*" and "flat-*" prefix (b/275577569)
      'elevated-unselected-container-color': 'elevated-container-color',
      'flat-container-elevation': 'container-elevation',
      'flat-disabled-unselected-outline-color': 'disabled-outline-color',
      'flat-disabled-unselected-outline-opacity': 'disabled-outline-opacity',
      'flat-disabled-selected-container-color':
        'disabled-selected-container-color',
      'flat-disabled-selected-container-opacity':
        'disabled-selected-container-opacity',
      'flat-unselected-focus-container-elevation': 'focus-container-elevation',
      'flat-unselected-focus-outline-color': 'focus-outline-color',
      'flat-unselected-hover-container-elevation': 'hover-container-elevation',
      'flat-unselected-outline-color': 'outline-color',
      'flat-unselected-outline-width': 'outline-width',
      'flat-unselected-pressed-container-elevation':
        'pressed-container-elevation',
      'flat-selected-container-color': 'selected-container-color',
      'flat-selected-focus-container-elevation':
        'selected-focus-container-elevation',
      'flat-selected-hover-container-elevation':
        'selected-hover-container-elevation',
      'flat-selected-outline-width': 'selected-outline-width',
      'flat-selected-pressed-container-elevation':
        'selected-pressed-container-elevation',
      'unselected-dragged-label-text-color': 'dragged-label-text-color',
      'unselected-dragged-state-layer-color': 'dragged-state-layer-color',
      'unselected-dragged-state-layer-opacity': 'dragged-state-layer-opacity',
      'unselected-focus-label-text-color': 'focus-label-text-color',
      'unselected-focus-state-layer-color': 'focus-state-layer-color',
      'unselected-focus-state-layer-opacity': 'focus-state-layer-opacity',
      'unselected-hover-label-text-color': 'hover-label-text-color',
      'unselected-hover-state-layer-color': 'hover-state-layer-color',
      'unselected-hover-state-layer-opacity': 'hover-state-layer-opacity',
      'unselected-label-text-color': 'label-text-color',
      'unselected-pressed-label-text-color': 'pressed-label-text-color',
      'unselected-pressed-state-layer-color': 'pressed-state-layer-color',
      'unselected-pressed-state-layer-opacity': 'pressed-state-layer-opacity',
      // Remove "with-*" prefixex (b/273534858)
      'with-icon-icon-size': 'icon-size',
      'with-leading-icon-disabled-leading-icon-color':
        'disabled-leading-icon-color',
      'with-leading-icon-disabled-leading-icon-opacity':
        'disabled-leading-icon-opacity',
      'with-leading-icon-selected-dragged-leading-icon-color':
        'selected-dragged-leading-icon-color',
      'with-leading-icon-selected-focus-leading-icon-color':
        'selected-focus-leading-icon-color',
      'with-leading-icon-selected-hover-leading-icon-color':
        'selected-hover-leading-icon-color',
      'with-leading-icon-selected-leading-icon-color':
        'selected-leading-icon-color',
      'with-leading-icon-selected-pressed-leading-icon-color':
        'selected-pressed-leading-icon-color',
      'with-leading-icon-unselected-dragged-leading-icon-color':
        'dragged-leading-icon-color',
      'with-leading-icon-unselected-focus-leading-icon-color':
        'focus-leading-icon-color',
      'with-leading-icon-unselected-hover-leading-icon-color':
        'hover-leading-icon-color',
      'with-leading-icon-unselected-leading-icon-color': 'leading-icon-color',
      'with-leading-icon-unselected-pressed-leading-icon-color':
        'pressed-leading-icon-color',
      'with-trailing-icon-disabled-trailing-icon-color':
        'disabled-trailing-icon-color',
      'with-trailing-icon-disabled-trailing-icon-opacity':
        'disabled-trailing-icon-opacity',
      'with-trailing-icon-selected-dragged-trailing-icon-color':
        'selected-dragged-trailing-icon-color',
      'with-trailing-icon-selected-focus-trailing-icon-color':
        'selected-focus-trailing-icon-color',
      'with-trailing-icon-selected-hover-trailing-icon-color':
        'selected-hover-trailing-icon-color',
      'with-trailing-icon-selected-pressed-trailing-icon-color':
        'selected-pressed-trailing-icon-color',
      'with-trailing-icon-selected-trailing-icon-color':
        'selected-trailing-icon-color',
      'with-trailing-icon-unselected-dragged-trailing-icon-color':
        'dragged-trailing-icon-color',
      'with-trailing-icon-unselected-focus-trailing-icon-color':
        'focus-trailing-icon-color',
      'with-trailing-icon-unselected-hover-trailing-icon-color':
        'hover-trailing-icon-color',
      'with-trailing-icon-unselected-pressed-trailing-icon-color':
        'pressed-trailing-icon-color',
      'with-trailing-icon-unselected-trailing-icon-color': 'trailing-icon-color'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-filter-chip-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-filter-chip-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-focus-ring.scss
================================================================================

//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-motion';
@use './md-sys-shape';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'active-width',
  'color',
  'duration',
  'inward-offset',
  'outward-offset',
  'shape',
  'shape-end-end',
  'shape-end-start',
  'shape-start-end',
  'shape-start-start',
  'width',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-motion': md-sys-motion.values(),
  'md-sys-shape': md-sys-shape.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: (
    'active-width': if($exclude-hardcoded-values, null, 8px),
    'color': map.get($deps, 'md-sys-color', 'secondary'),
    'duration': map.get($deps, 'md-sys-motion', 'duration-long4'),
    'inward-offset': if($exclude-hardcoded-values, null, 0px),
    'outward-offset': if($exclude-hardcoded-values, null, 2px),
    'shape': map.get($deps, 'md-sys-shape', 'corner-full'),
    'width': if($exclude-hardcoded-values, null, 3px),
  );

  $new-tokens: shape.get-new-logical-shape-tokens($tokens, 'shape');
  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $new-tokens: $new-tokens
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-focus-ring-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-focus-ring-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-full-screen-dialog.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-full-screen-dialog';
// go/keep-sorted end

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values($deps: $_default, $exclude-hardcoded-values: false) {
  @return md-comp-full-screen-dialog.values($deps, $exclude-hardcoded-values);
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-icon-button.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-state';
@use './v0_192/md-comp-icon-button';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'disabled-icon-color',
  'disabled-icon-opacity',
  'focus-icon-color',
  'hover-icon-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'pressed-icon-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'selected-focus-icon-color',
  'selected-hover-icon-color',
  'selected-hover-state-layer-color',
  'selected-hover-state-layer-opacity',
  'selected-icon-color',
  'selected-pressed-icon-color',
  'selected-pressed-state-layer-color',
  'selected-pressed-state-layer-opacity',
  'state-layer-height',
  'state-layer-shape',
  'state-layer-width',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'selected-focus-state-layer-color',
  'selected-focus-state-layer-opacity',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: validate.values(
    md-comp-icon-button.values($deps, $exclude-hardcoded-values),
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $renamed-tokens: (
      // Remove default "unselected" prefix (b/292244480)
      'unselected-focus-icon-color': 'focus-icon-color',
      'unselected-hover-icon-color': 'hover-icon-color',
      'unselected-hover-state-layer-color': 'hover-state-layer-color',
      'unselected-hover-state-layer-opacity': 'hover-state-layer-opacity',
      'unselected-icon-color': 'icon-color',
      'unselected-pressed-icon-color': 'pressed-icon-color',
      'unselected-pressed-state-layer-color': 'pressed-state-layer-color',
      'unselected-pressed-state-layer-opacity': 'pressed-state-layer-opacity',
      'unselected-focus-state-layer-color': 'focus-state-layer-color',
      'unselected-focus-state-layer-opacity': 'focus-state-layer-opacity'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set(
        $tokens,
        $token,
        var(--md-icon-button-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-icon.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'font',
  'size',
  // go/keep-sorted end
);

@function _get-new-tokens($exclude-hardcoded-values) {
  @return (
    // go/keep-sorted start
    font: if($exclude-hardcoded-values, null, 'Material Symbols Outlined'),
    size: if($exclude-hardcoded-values, null, 24px),
    // go/keep-sorted end
  );
}

@function values(
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: validate.values(
    (),
    $supported-tokens: $supported-tokens,
    $new-tokens: _get-new-tokens($exclude-hardcoded-values)
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set($tokens, $token, var(--md-icon-#{$token}, #{$value}));
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-input-chip.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-input-chip';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'avatar-shape',
  'avatar-size',
  'container-height',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'disabled-avatar-opacity',
  'disabled-label-text-color',
  'disabled-label-text-opacity',
  'disabled-leading-icon-color',
  'disabled-leading-icon-opacity',
  'disabled-outline-color',
  'disabled-outline-opacity',
  'disabled-selected-container-color',
  'disabled-selected-container-opacity',
  'disabled-trailing-icon-color',
  'disabled-trailing-icon-opacity',
  'focus-label-text-color',
  'focus-leading-icon-color',
  'focus-outline-color',
  'focus-trailing-icon-color',
  'hover-label-text-color',
  'hover-leading-icon-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'hover-trailing-icon-color',
  'icon-label-space',
  'icon-size',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'leading-icon-color',
  'leading-space',
  'outline-color',
  'outline-width',
  'pressed-label-text-color',
  'pressed-leading-icon-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'pressed-trailing-icon-color',
  'selected-container-color',
  'selected-focus-label-text-color',
  'selected-focus-leading-icon-color',
  'selected-focus-trailing-icon-color',
  'selected-hover-label-text-color',
  'selected-hover-leading-icon-color',
  'selected-hover-state-layer-color',
  'selected-hover-state-layer-opacity',
  'selected-hover-trailing-icon-color',
  'selected-label-text-color',
  'selected-leading-icon-color',
  'selected-outline-width',
  'selected-pressed-label-text-color',
  'selected-pressed-leading-icon-color',
  'selected-pressed-state-layer-color',
  'selected-pressed-state-layer-opacity',
  'selected-pressed-trailing-icon-color',
  'selected-trailing-icon-color',
  'trailing-icon-color',
  'trailing-space',
  'with-leading-icon-leading-space',
  'with-trailing-icon-trailing-space',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'container-elevation',
  'dragged-container-elevation',
  'dragged-label-text-color',
  'dragged-leading-icon-color',
  'dragged-state-layer-color',
  'dragged-state-layer-opacity',
  'dragged-trailing-icon-color',
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'label-text-tracking',
  'label-text-type',
  'selected-dragged-label-text-color',
  'selected-dragged-leading-icon-color',
  'selected-dragged-state-layer-color',
  'selected-dragged-state-layer-opacity',
  'selected-dragged-trailing-icon-color',
  'selected-focus-state-layer-color',
  'selected-focus-state-layer-opacity',
  'trailing-icon-size',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-input-chip.values($deps, $exclude-hardcoded-values);
  $new-tokens: map.merge(
    shape.get-new-logical-shape-tokens($tokens, 'container-shape'),
    (
      'leading-space': if($exclude-hardcoded-values, null, 16px),
      'trailing-space': if($exclude-hardcoded-values, null, 16px),
      'icon-label-space': if($exclude-hardcoded-values, null, 8px),
      'with-leading-icon-leading-space':
        if($exclude-hardcoded-values, null, 8px),
      'with-trailing-icon-trailing-space':
        if($exclude-hardcoded-values, null, 8px),
    )
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove "unselected-*" prefix (b/275577569)
      'disabled-unselected-outline-color': 'disabled-outline-color',
      'disabled-unselected-outline-opacity': 'disabled-outline-opacity',
      'unselected-dragged-label-text-color': 'dragged-label-text-color',
      'unselected-dragged-state-layer-color': 'dragged-state-layer-color',
      'unselected-dragged-state-layer-opacity': 'dragged-state-layer-opacity',
      'unselected-focus-label-text-color': 'focus-label-text-color',
      'unselected-focus-outline-color': 'focus-outline-color',
      'unselected-focus-state-layer-color': 'focus-state-layer-color',
      'unselected-focus-state-layer-opacity': 'focus-state-layer-opacity',
      'unselected-hover-label-text-color': 'hover-label-text-color',
      'unselected-hover-state-layer-color': 'hover-state-layer-color',
      'unselected-hover-state-layer-opacity': 'hover-state-layer-opacity',
      'unselected-label-text-color': 'label-text-color',
      'unselected-outline-color': 'outline-color',
      'unselected-outline-width': 'outline-width',
      'unselected-pressed-label-text-color': 'pressed-label-text-color',
      'unselected-pressed-state-layer-color': 'pressed-state-layer-color',
      'unselected-pressed-state-layer-opacity': 'pressed-state-layer-opacity',
      // Remove "with-*" prefixes (b/273534858)
      'with-avatar-avatar-shape': 'avatar-shape',
      'with-avatar-avatar-size': 'avatar-size',
      'with-avatar-disabled-avatar-opacity': 'disabled-avatar-opacity',
      'with-leading-icon-disabled-leading-icon-color':
        'disabled-leading-icon-color',
      'with-leading-icon-disabled-leading-icon-opacity':
        'disabled-leading-icon-opacity',
      // Rename "leading-icon-size" to "icon-size" (b/275577569)
      'with-leading-icon-leading-icon-size': 'icon-size',
      'with-leading-icon-selected-dragged-leading-icon-color':
        'selected-dragged-leading-icon-color',
      'with-leading-icon-selected-focus-leading-icon-color':
        'selected-focus-leading-icon-color',
      'with-leading-icon-selected-hover-leading-icon-color':
        'selected-hover-leading-icon-color',
      'with-leading-icon-selected-leading-icon-color':
        'selected-leading-icon-color',
      'with-leading-icon-selected-pressed-leading-icon-color':
        'selected-pressed-leading-icon-color',
      'with-leading-icon-unselected-dragged-leading-icon-color':
        'dragged-leading-icon-color',
      'with-leading-icon-unselected-focus-leading-icon-color':
        'focus-leading-icon-color',
      'with-leading-icon-unselected-hover-leading-icon-color':
        'hover-leading-icon-color',
      'with-leading-icon-unselected-leading-icon-color': 'leading-icon-color',
      'with-leading-icon-unselected-pressed-leading-icon-color':
        'pressed-leading-icon-color',
      'with-trailing-icon-disabled-trailing-icon-color':
        'disabled-trailing-icon-color',
      'with-trailing-icon-disabled-trailing-icon-opacity':
        'disabled-trailing-icon-opacity',
      'with-trailing-icon-selected-dragged-trailing-icon-color':
        'selected-dragged-trailing-icon-color',
      'with-trailing-icon-selected-focus-trailing-icon-color':
        'selected-focus-trailing-icon-color',
      'with-trailing-icon-selected-hover-trailing-icon-color':
        'selected-hover-trailing-icon-color',
      'with-trailing-icon-selected-pressed-trailing-icon-color':
        'selected-pressed-trailing-icon-color',
      'with-trailing-icon-selected-trailing-icon-color':
        'selected-trailing-icon-color',
      'with-trailing-icon-trailing-icon-size': 'trailing-icon-size',
      'with-trailing-icon-unselected-dragged-trailing-icon-color':
        'dragged-trailing-icon-color',
      'with-trailing-icon-unselected-focus-trailing-icon-color':
        'focus-trailing-icon-color',
      'with-trailing-icon-unselected-hover-trailing-icon-color':
        'hover-trailing-icon-color',
      'with-trailing-icon-unselected-pressed-trailing-icon-color':
        'pressed-trailing-icon-color',
      'with-trailing-icon-unselected-trailing-icon-color': 'trailing-icon-color'
    )
  );

  // TODO(b/288199264): remove once input chip leading icon color is fixed
  $tokens: map.set(
    $tokens,
    'leading-icon-color',
    map.get($deps, 'md-sys-color', 'primary')
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-input-chip-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-input-chip-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-item.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-typescale';
@use './v0_192/md-comp-list';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'overline-color',
  'overline-font',
  'overline-line-height',
  'overline-size',
  'overline-weight',
  'supporting-text-color',
  'supporting-text-font',
  'supporting-text-line-height',
  'supporting-text-size',
  'supporting-text-weight',
  'trailing-supporting-text-color',
  'trailing-supporting-text-font',
  'trailing-supporting-text-line-height',
  'trailing-supporting-text-size',
  'trailing-supporting-text-weight',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values($deps: $_default, $exclude-hardcoded-values: false) {
  // Note: <md-item> does not provide `--md-item-*` custom properties.
  $list-tokens: md-comp-list.values($deps, $exclude-hardcoded-values);

  $tokens: (
    // go/keep-sorted start
    'label-text-color': map.get($list-tokens, 'list-item-label-text-color'),
    'label-text-font': map.get($list-tokens, 'list-item-label-text-font'),
    'label-text-line-height':
      map.get($list-tokens, 'list-item-label-text-line-height'),
    'label-text-size': map.get($list-tokens, 'list-item-label-text-size'),
    'label-text-weight': map.get($list-tokens, 'list-item-label-text-weight'),
    'overline-color': map.get($list-tokens, 'list-item-overline-color'),
    'overline-font': map.get($list-tokens, 'list-item-overline-font'),
    'overline-line-height':
      map.get($list-tokens, 'list-item-overline-line-height'),
    'overline-size': map.get($list-tokens, 'list-item-overline-size'),
    'overline-weight': map.get($list-tokens, 'list-item-overline-weight'),
    'supporting-text-color':
      map.get($list-tokens, 'list-item-supporting-text-color'),
    'supporting-text-font':
      map.get($list-tokens, 'list-item-supporting-text-font'),
    'supporting-text-line-height':
      map.get($list-tokens, 'list-item-supporting-text-line-height'),
    'supporting-text-size':
      map.get($list-tokens, 'list-item-supporting-text-size'),
    'supporting-text-weight':
      map.get($list-tokens, 'list-item-supporting-text-weight'),
    'trailing-supporting-text-color':
      map.get($list-tokens, 'list-item-trailing-supporting-text-color'),
    'trailing-supporting-text-font':
      map.get($list-tokens, 'list-item-trailing-supporting-text-font'),
    'trailing-supporting-text-line-height':
      map.get($list-tokens, 'list-item-trailing-supporting-text-line-height'),
    'trailing-supporting-text-size':
      map.get($list-tokens, 'list-item-trailing-supporting-text-size'),
    'trailing-supporting-text-weight':
      map.get($list-tokens, 'list-item-trailing-supporting-text-weight'),
    // go/keep-sorted end
  );

  @return validate.values($tokens, $supported-tokens: $supported-tokens);
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-linear-progress.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './v0_192/md-comp-linear-progress-indicator';
// go/keep-sorted end

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
);

$supported-tokens: (
  // go/keep-sorted start
  'active-indicator-color',
  'active-indicator-height',
  'four-color-active-indicator-four-color',
  'four-color-active-indicator-one-color',
  'four-color-active-indicator-three-color',
  'four-color-active-indicator-two-color',
  'track-color',
  'track-height',
  'track-shape',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  // can only control track since scaling is used on buffer/progress
  'active-indicator-shape',
  // go/keep-sorted end
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: validate.values(
    md-comp-linear-progress-indicator.values($deps, $exclude-hardcoded-values),
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set(
        $tokens,
        $token,
        var(--md-linear-progress-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-list-item.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-list';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'bottom-space',
  'disabled-opacity',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'leading-icon-color',
  'leading-space',
  'one-line-container-height',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'supporting-text-color',
  'supporting-text-font',
  'supporting-text-line-height',
  'supporting-text-size',
  'supporting-text-weight',
  'top-space',
  'trailing-icon-color',
  'trailing-space',
  'trailing-supporting-text-color',
  'trailing-supporting-text-font',
  'trailing-supporting-text-line-height',
  'trailing-supporting-text-size',
  'trailing-supporting-text-weight',
  'two-line-container-height',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'container-color',
  'container-elevation',
  'container-shape',
  'disabled-label-text-color',
  'disabled-label-text-opacity',
  'disabled-leading-icon-color',
  'disabled-leading-icon-opacity',
  'disabled-state-layer-color',
  'disabled-state-layer-opacity',
  'disabled-trailing-icon-color',
  'disabled-trailing-icon-opacity',
  'divider-leading-space',
  'divider-trailing-space',
  'dragged-container-elevation',
  'dragged-label-text-color',
  'dragged-leading-icon-icon-color',
  'dragged-state-layer-color',
  'dragged-state-layer-opacity',
  'dragged-trailing-icon-icon-color',
  'focus-label-text-color',
  'focus-leading-icon-icon-color',
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'focus-trailing-icon-icon-color',
  'hover-label-text-color',
  'hover-leading-icon-icon-color',
  'hover-trailing-icon-icon-color',
  'label-text-tracking',
  'label-text-type',
  'large-leading-video-height',
  'leading-avatar-color',
  'leading-avatar-label-color',
  'leading-avatar-label-font',
  'leading-avatar-label-line-height',
  'leading-avatar-label-size',
  'leading-avatar-label-tracking',
  'leading-avatar-label-type',
  'leading-avatar-label-weight',
  'leading-avatar-shape',
  'leading-avatar-size',
  'leading-icon-size',
  'leading-image-height',
  'leading-image-shape',
  'leading-image-width',
  'leading-video-shape',
  'leading-video-width',
  'overline-color',
  'overline-font',
  'overline-line-height',
  'overline-size',
  'overline-tracking',
  'overline-type',
  'overline-weight',
  'pressed-label-text-color',
  'pressed-leading-icon-icon-color',
  'pressed-trailing-icon-icon-color',
  'selected-trailing-icon-color',
  'small-leading-video-height',
  'supporting-text-tracking',
  'supporting-text-type',
  'three-line-container-height',
  'trailing-icon-size',
  'trailing-supporting-text-tracking',
  'trailing-supporting-text-type',
  'unselected-trailing-icon-color',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $original-tokens: md-comp-list.values($deps, $exclude-hardcoded-values);

  $tokens: validate.values(
    $original-tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: (
      'top-space': if($exclude-hardcoded-values, null, 12px),
      'bottom-space': if($exclude-hardcoded-values, null, 12px),
      'disabled-opacity':
        map.get($original-tokens, 'list-item-disabled-label-text-opacity'),
    ),
    $renamed-tokens: _get-renamed-tokens($original-tokens)
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set(
        $tokens,
        $token,
        var(--md-list-item-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

// remove list-item prefix from tokens
@function _get-renamed-tokens($tokens) {
  $keys: map.keys($tokens);
  $renamed-tokens: ();

  @each $key in $keys {
    @if string.index($key, 'list-item-') == 1 {
      $renamed-key: string.slice($key, string.length('list-item-') + 1);
      $renamed-tokens: map.set($renamed-tokens, $key, $renamed-key);
    }
  }

  @return $renamed-tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-list.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './v0_192/md-comp-list';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-color',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $list-tokens: md-comp-list.values($deps, $exclude-hardcoded-values);
  $tokens: (
    'container-color': map.get($list-tokens, 'list-item-container-color'),
  );

  $tokens: validate.values($tokens, $supported-tokens: $supported-tokens);

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set($tokens, $token, var(--md-list-#{$token}, #{$value}));
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-menu-item.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-comp-list-item';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-menu';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'bottom-space',
  'container-color',
  'disabled-opacity',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'leading-icon-color',
  'leading-space',
  'one-line-container-height',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'selected-container-color',
  'selected-label-text-color',
  'supporting-text-color',
  'supporting-text-font',
  'supporting-text-line-height',
  'supporting-text-size',
  'supporting-text-weight',
  'top-space',
  'trailing-icon-color',
  'trailing-space',
  'trailing-supporting-text-color',
  'trailing-supporting-text-font',
  'trailing-supporting-text-line-height',
  'trailing-supporting-text-size',
  'trailing-supporting-text-weight',
  'two-line-container-height',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'container-elevation',
  'container-shadow-color',
  'container-shape',
  'selected-with-leading-icon-trailing-icon-color',
  'with-leading-icon-icon-color',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-menu.values($deps);

  // Like list items, menu items use their parent menu for their container
  // color. However, menu items can have a selected background color, so we
  // change its default unselected background color to transparent to inherit
  // from its parent menu.
  $tokens: map.set($tokens, 'container-color', transparent);

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: md-comp-list-item.values($deps),
    $renamed-tokens: _get-renamed-tokens($tokens)
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set(
        $tokens,
        $token,
        var(--md-menu-item-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

// remove list-item prefix from tokens
@function _get-renamed-tokens($tokens) {
  $keys: map.keys($tokens);
  $renamed-tokens: ();

  @each $key in $keys {
    @each $prefix in ('list-item-', 'menu-list-item-') {
      @if string.index($key, $prefix) == 1 {
        $renamed-key: string.slice($key, string.length($prefix) + 1);
        $renamed-tokens: map.set($renamed-tokens, $key, $renamed-key);
      }
    }
  }

  @return $renamed-tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-menu.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './v0_192/md-comp-menu';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-color',
  'container-elevation',
  'container-shadow-color',
  'container-shape',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'list-item-selected-container-color',
  'list-item-selected-label-text-color',
  'list-item-selected-with-leading-icon-trailing-icon-color',
  'menu-list-item-with-leading-icon-icon-color',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: validate.values(
    md-comp-menu.values($deps),
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set($tokens, $token, var(--md-menu-#{$token}, #{$value}));
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-navigation-bar.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-navigation-bar';
// go/keep-sorted end

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-navigation-bar.values($deps, $exclude-hardcoded-values);

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set(
        $tokens,
        $token,
        var(--md-navigation-bar-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-navigation-drawer.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-navigation-drawer';
// go/keep-sorted end

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-navigation-drawer.values($deps, $exclude-hardcoded-values);

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set(
        $tokens,
        $token,
        var(--md-navigation-drawer-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-outlined-button.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-outlined-button';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-height',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'disabled-icon-color',
  'disabled-icon-opacity',
  'disabled-label-text-color',
  'disabled-label-text-opacity',
  'disabled-outline-color',
  'disabled-outline-opacity',
  'focus-icon-color',
  'focus-label-text-color',
  'hover-icon-color',
  'hover-label-text-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'leading-space',
  'outline-color',
  'outline-width',
  'pressed-icon-color',
  'pressed-label-text-color',
  'pressed-outline-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'trailing-space',
  'with-leading-icon-leading-space',
  'with-leading-icon-trailing-space',
  'with-trailing-icon-leading-space',
  'with-trailing-icon-trailing-space',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'focus-outline-color',
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'hover-outline-color',
  'label-text-tracking',
  'label-text-type',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-outlined-button.values($deps, $exclude-hardcoded-values);
  $new-tokens: map.merge(
    shape.get-new-logical-shape-tokens($tokens, 'container-shape'),
    (
      // b/198759625 - Remove once spacing tokens are formally added
      // go/keep-sorted start
      'leading-space': if($exclude-hardcoded-values, null, 24px),
      'trailing-space': if($exclude-hardcoded-values, null, 24px),
      'with-leading-icon-leading-space':
        if($exclude-hardcoded-values, null, 16px),
      'with-leading-icon-trailing-space':
        if($exclude-hardcoded-values, null, 24px),
      'with-trailing-icon-leading-space':
        if($exclude-hardcoded-values, null, 24px),
      'with-trailing-icon-trailing-space':
        if($exclude-hardcoded-values, null, 16px),
      // go/keep-sorted end
    )
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove "with-*" prefixes (b/273534858)
      'with-icon-disabled-icon-color': 'disabled-icon-color',
      'with-icon-disabled-icon-opacity': 'disabled-icon-opacity',
      'with-icon-focus-icon-color': 'focus-icon-color',
      'with-icon-hover-icon-color': 'hover-icon-color',
      'with-icon-icon-color': 'icon-color',
      'with-icon-icon-size': 'icon-size',
      'with-icon-pressed-icon-color': 'pressed-icon-color'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-outlined-button-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-outlined-button-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-outlined-card.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './v0_192/md-comp-outlined-card';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-color',
  'container-elevation',
  'container-shadow-color',
  'container-shape',
  'outline-color',
  'outline-width',
  // go/keep-sorted end
);

// TODO(b/307362112): Add interactive card tokens (hover, focus, pressed)
// TODO(b/307361748): Add disabled cards tokens.
$unsupported-tokens: (
  // go/keep-sorted start
  'disabled-container-elevation',
  'disabled-outline-color',
  'disabled-outline-opacity',
  'dragged-container-elevation',
  'dragged-outline-color',
  'dragged-state-layer-color',
  'dragged-state-layer-opacity',
  'focus-container-elevation',
  'focus-outline-color',
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'hover-container-elevation',
  'hover-outline-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'pressed-container-elevation',
  'pressed-outline-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: validate.values(
    md-comp-outlined-card.values($deps, $exclude-hardcoded-values),
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set(
        $tokens,
        $token,
        var(--md-outlined-card-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-outlined-field.scss
================================================================================

//
// Copyright 2021 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-outlined-text-field';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'bottom-space',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'content-color',
  'content-font',
  'content-line-height',
  'content-size',
  'content-weight',
  'disabled-content-color',
  'disabled-content-opacity',
  'disabled-label-text-color',
  'disabled-label-text-opacity',
  'disabled-leading-content-color',
  'disabled-leading-content-opacity',
  'disabled-outline-color',
  'disabled-outline-opacity',
  'disabled-outline-width',
  'disabled-supporting-text-color',
  'disabled-supporting-text-opacity',
  'disabled-trailing-content-color',
  'disabled-trailing-content-opacity',
  'error-content-color',
  'error-focus-content-color',
  'error-focus-label-text-color',
  'error-focus-leading-content-color',
  'error-focus-outline-color',
  'error-focus-supporting-text-color',
  'error-focus-trailing-content-color',
  'error-hover-content-color',
  'error-hover-label-text-color',
  'error-hover-leading-content-color',
  'error-hover-outline-color',
  'error-hover-supporting-text-color',
  'error-hover-trailing-content-color',
  'error-label-text-color',
  'error-leading-content-color',
  'error-outline-color',
  'error-supporting-text-color',
  'error-trailing-content-color',
  'focus-content-color',
  'focus-label-text-color',
  'focus-leading-content-color',
  'focus-outline-color',
  'focus-outline-width',
  'focus-supporting-text-color',
  'focus-trailing-content-color',
  'hover-content-color',
  'hover-label-text-color',
  'hover-leading-content-color',
  'hover-outline-color',
  'hover-outline-width',
  'hover-supporting-text-color',
  'hover-trailing-content-color',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-padding-bottom',
  'label-text-populated-line-height',
  'label-text-populated-size',
  'label-text-size',
  'label-text-weight',
  'leading-content-color',
  'leading-space',
  'outline-color',
  'outline-label-padding',
  'outline-width',
  'supporting-text-color',
  'supporting-text-font',
  'supporting-text-leading-space',
  'supporting-text-line-height',
  'supporting-text-size',
  'supporting-text-top-space',
  'supporting-text-trailing-space',
  'supporting-text-weight',
  'top-space',
  'trailing-content-color',
  'trailing-space',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $text-field: md-comp-outlined-text-field.values(
    $deps,
    $exclude-hardcoded-values
  );

  $tokens: (
    // go/keep-sorted start
    'bottom-space': if($exclude-hardcoded-values, null, 16px),
    'container-shape': map.get($text-field, 'container-shape'),
    'content-color': map.get($text-field, 'input-text-color'),
    'content-font': map.get($text-field, 'input-text-font'),
    'content-line-height': map.get($text-field, 'input-text-line-height'),
    'content-size': map.get($text-field, 'input-text-size'),
    'content-weight': map.get($text-field, 'input-text-weight'),
    'disabled-content-color': map.get($text-field, 'disabled-input-text-color'),
    'disabled-content-opacity':
      map.get($text-field, 'disabled-input-text-opacity'),
    'disabled-label-text-color':
      map.get($text-field, 'disabled-label-text-color'),
    'disabled-label-text-opacity':
      map.get($text-field, 'disabled-label-text-opacity'),
    'disabled-leading-content-color':
      map.get($text-field, 'disabled-leading-icon-color'),
    'disabled-leading-content-opacity':
      map.get($text-field, 'disabled-leading-icon-opacity'),
    'disabled-outline-color': map.get($text-field, 'disabled-outline-color'),
    'disabled-outline-opacity': map.get($text-field, 'disabled-outline-opacity'),
    'disabled-outline-width': map.get($text-field, 'disabled-outline-width'),
    'disabled-supporting-text-color':
      map.get($text-field, 'disabled-supporting-text-color'),
    'disabled-supporting-text-opacity':
      map.get($text-field, 'disabled-supporting-text-opacity'),
    'disabled-trailing-content-color':
      map.get($text-field, 'disabled-trailing-icon-color'),
    'disabled-trailing-content-opacity':
      map.get($text-field, 'disabled-trailing-icon-opacity'),
    'error-content-color': map.get($text-field, 'error-input-text-color'),
    'error-focus-content-color':
      map.get($text-field, 'error-focus-input-text-color'),
    'error-focus-label-text-color':
      map.get($text-field, 'error-focus-label-text-color'),
    'error-focus-leading-content-color':
      map.get($text-field, 'error-focus-leading-icon-color'),
    'error-focus-outline-color':
      map.get($text-field, 'error-focus-outline-color'),
    'error-focus-supporting-text-color':
      map.get($text-field, 'error-focus-supporting-text-color'),
    'error-focus-trailing-content-color':
      map.get($text-field, 'error-focus-trailing-icon-color'),
    'error-hover-content-color':
      map.get($text-field, 'error-hover-input-text-color'),
    'error-hover-label-text-color':
      map.get($text-field, 'error-hover-label-text-color'),
    'error-hover-leading-content-color':
      map.get($text-field, 'error-hover-leading-icon-color'),
    'error-hover-outline-color':
      map.get($text-field, 'error-hover-outline-color'),
    'error-hover-supporting-text-color':
      map.get($text-field, 'error-hover-supporting-text-color'),
    'error-hover-trailing-content-color':
      map.get($text-field, 'error-hover-trailing-icon-color'),
    'error-label-text-color': map.get($text-field, 'error-label-text-color'),
    'error-leading-content-color':
      map.get($text-field, 'error-leading-icon-color'),
    'error-outline-color': map.get($text-field, 'error-outline-color'),
    'error-supporting-text-color':
      map.get($text-field, 'error-supporting-text-color'),
    'error-trailing-content-color':
      map.get($text-field, 'error-trailing-icon-color'),
    'focus-content-color': map.get($text-field, 'focus-input-text-color'),
    'focus-label-text-color': map.get($text-field, 'focus-label-text-color'),
    'focus-leading-content-color':
      map.get($text-field, 'focus-leading-icon-color'),
    'focus-outline-color': map.get($text-field, 'focus-outline-color'),
    // TODO(b/259455114): remove when focus tokens update to 3px
    'focus-outline-width': if($exclude-hardcoded-values, null, 3px),
    'focus-supporting-text-color':
      map.get($text-field, 'focus-supporting-text-color'),
    'focus-trailing-content-color':
      map.get($text-field, 'focus-trailing-icon-color'),
    'hover-content-color': map.get($text-field, 'hover-input-text-color'),
    'hover-label-text-color': map.get($text-field, 'hover-label-text-color'),
    'hover-leading-content-color':
      map.get($text-field, 'hover-leading-icon-color'),
    'hover-outline-color': map.get($text-field, 'hover-outline-color'),
    'hover-outline-width': map.get($text-field, 'hover-outline-width'),
    'hover-supporting-text-color':
      map.get($text-field, 'hover-supporting-text-color'),
    'hover-trailing-content-color':
      map.get($text-field, 'hover-trailing-icon-color'),
    'label-text-color': map.get($text-field, 'label-text-color'),
    'label-text-font': map.get($text-field, 'label-text-font'),
    'label-text-line-height': map.get($text-field, 'label-text-line-height'),
    'label-text-padding-bottom': if($exclude-hardcoded-values, null, 8px),
    'label-text-populated-line-height':
      map.get($text-field, 'label-text-populated-line-height'),
    'label-text-populated-size':
      map.get($text-field, 'label-text-populated-size'),
    'label-text-size': map.get($text-field, 'label-text-size'),
    'label-text-weight': map.get($text-field, 'label-text-weight'),
    'leading-content-color': map.get($text-field, 'leading-icon-color'),
    'leading-space': if($exclude-hardcoded-values, null, 16px),
    'outline-color': map.get($text-field, 'outline-color'),
    'outline-label-padding': if($exclude-hardcoded-values, null, 4px),
    'outline-width': map.get($text-field, 'outline-width'),
    'supporting-text-color': map.get($text-field, 'supporting-text-color'),
    'supporting-text-font': map.get($text-field, 'supporting-text-font'),
    'supporting-text-leading-space': if($exclude-hardcoded-values, null, 16px),
    'supporting-text-line-height':
      map.get($text-field, 'supporting-text-line-height'),
    'supporting-text-size': map.get($text-field, 'supporting-text-size'),
    'supporting-text-top-space': if($exclude-hardcoded-values, null, 4px),
    'supporting-text-trailing-space': if($exclude-hardcoded-values, null, 16px),
    'supporting-text-weight': map.get($text-field, 'supporting-text-weight'),
    'top-space': if($exclude-hardcoded-values, null, 16px),
    'trailing-content-color': map.get($text-field, 'trailing-icon-color'),
    'trailing-space': if($exclude-hardcoded-values, null, 16px),
    // go/keep-sorted end
  );

  $new-tokens: shape.get-new-logical-shape-tokens($tokens, 'container-shape');
  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $new-tokens: $new-tokens
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-outlined-field-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-outlined-field-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-outlined-icon-button.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-state';
@use './v0_192/md-comp-outlined-icon-button';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-height',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'container-width',
  'disabled-icon-color',
  'disabled-icon-opacity',
  'disabled-outline-color',
  'disabled-outline-opacity',
  'disabled-selected-container-color',
  'disabled-selected-container-opacity',
  'focus-icon-color',
  'hover-icon-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'outline-color',
  'outline-width',
  'pressed-icon-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'selected-container-color',
  'selected-focus-icon-color',
  'selected-hover-icon-color',
  'selected-hover-state-layer-color',
  'selected-icon-color',
  'selected-pressed-icon-color',
  'selected-pressed-state-layer-color',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'selected-focus-state-layer-color',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-outlined-icon-button.values(
    $deps,
    $exclude-hardcoded-values
  );

  $new-tokens: shape.get-new-logical-shape-tokens($tokens, 'container-shape');
  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove default "unselected" prefix (b/292244480)
      'disabled-unselected-outline-color': 'disabled-outline-color',
      'disabled-unselected-outline-opacity': 'disabled-outline-opacity',
      'unselected-focus-icon-color': 'focus-icon-color',
      'unselected-hover-icon-color': 'hover-icon-color',
      'unselected-hover-state-layer-color': 'hover-state-layer-color',
      'unselected-icon-color': 'icon-color',
      'unselected-outline-color': 'outline-color',
      'unselected-outline-width': 'outline-width',
      'unselected-pressed-icon-color': 'pressed-icon-color',
      'unselected-pressed-state-layer-color': 'pressed-state-layer-color',
      'unselected-focus-state-layer-color': 'focus-state-layer-color'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-outlined-icon-button-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-outlined-icon-button-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-outlined-segmented-button.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Ide

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-outlined-segmented-button';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-height',
  'disabled-icon-color',
  'disabled-label-text-color',
  'disabled-outline-color',
  'hover-state-layer-opacity',
  'icon-size',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'outline-color',
  'pressed-state-layer-opacity',
  'selected-container-color',
  'selected-focus-icon-color',
  'selected-focus-label-text-color',
  'selected-hover-icon-color',
  'selected-hover-label-text-color',
  'selected-hover-state-layer-color',
  'selected-icon-color',
  'selected-label-text-color',
  'selected-pressed-icon-color',
  'selected-pressed-label-text-color',
  'selected-pressed-state-layer-color',
  'shape',
  'shape-end-end',
  'shape-end-start',
  'shape-start-end',
  'shape-start-start',
  'unselected-focus-icon-color',
  'unselected-focus-label-text-color',
  'unselected-hover-icon-color',
  'unselected-hover-label-text-color',
  'unselected-hover-state-layer-color',
  'unselected-icon-color',
  'unselected-label-text-color',
  'unselected-pressed-icon-color',
  'unselected-pressed-label-text-color',
  'unselected-pressed-state-layer-color',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'disabled-icon-opacity',
  'disabled-label-text-opacity',
  'disabled-outline-opacity',
  'focus-state-layer-opacity',
  'label-text-tracking',
  'label-text-type',
  'outline-width',
  'selected-focus-state-layer-color',
  'unselected-focus-state-layer-color',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-outlined-segmented-button.values(
    $deps,
    $exclude-hardcoded-values
  );

  $new-tokens: shape.get-new-logical-shape-tokens($tokens, 'shape');
  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove "with-*" prefixes (b/273534858)
      'with-icon-icon-size': 'icon-size',
      'selected-with-icon-icon-color': 'selected-icon-color',
      'unselected-with-icon-icon-color': 'unselected-icon-color'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-outlined-segmented-button-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-outlined-segmented-button-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-outlined-select.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-outlined-select';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'text-field-container-shape',
  'text-field-container-shape-end-end',
  'text-field-container-shape-end-start',
  'text-field-container-shape-start-end',
  'text-field-container-shape-start-start',
  'text-field-disabled-input-text-color',
  'text-field-disabled-input-text-opacity',
  'text-field-disabled-label-text-color',
  'text-field-disabled-label-text-opacity',
  'text-field-disabled-leading-icon-color',
  'text-field-disabled-leading-icon-opacity',
  'text-field-disabled-outline-color',
  'text-field-disabled-outline-opacity',
  'text-field-disabled-outline-width',
  'text-field-disabled-supporting-text-color',
  'text-field-disabled-supporting-text-opacity',
  'text-field-disabled-trailing-icon-color',
  'text-field-disabled-trailing-icon-opacity',
  'text-field-error-focus-input-text-color',
  'text-field-error-focus-label-text-color',
  'text-field-error-focus-leading-icon-color',
  'text-field-error-focus-outline-color',
  'text-field-error-focus-supporting-text-color',
  'text-field-error-focus-trailing-icon-color',
  'text-field-error-hover-input-text-color',
  'text-field-error-hover-label-text-color',
  'text-field-error-hover-leading-icon-color',
  'text-field-error-hover-outline-color',
  'text-field-error-hover-supporting-text-color',
  'text-field-error-hover-trailing-icon-color',
  'text-field-error-input-text-color',
  'text-field-error-label-text-color',
  'text-field-error-leading-icon-color',
  'text-field-error-outline-color',
  'text-field-error-supporting-text-color',
  'text-field-error-trailing-icon-color',
  'text-field-focus-input-text-color',
  'text-field-focus-label-text-color',
  'text-field-focus-leading-icon-color',
  'text-field-focus-outline-color',
  'text-field-focus-outline-width',
  'text-field-focus-supporting-text-color',
  'text-field-focus-trailing-icon-color',
  'text-field-hover-input-text-color',
  'text-field-hover-label-text-color',
  'text-field-hover-leading-icon-color',
  'text-field-hover-outline-color',
  'text-field-hover-outline-width',
  'text-field-hover-supporting-text-color',
  'text-field-hover-trailing-icon-color',
  'text-field-input-text-color',
  'text-field-input-text-font',
  'text-field-input-text-line-height',
  'text-field-input-text-size',
  'text-field-input-text-weight',
  'text-field-label-text-color',
  'text-field-label-text-font',
  'text-field-label-text-line-height',
  'text-field-label-text-populated-line-height',
  'text-field-label-text-populated-size',
  'text-field-label-text-size',
  'text-field-label-text-weight',
  'text-field-leading-icon-color',
  'text-field-leading-icon-size',
  'text-field-outline-color',
  'text-field-outline-width',
  'text-field-supporting-text-color',
  'text-field-supporting-text-font',
  'text-field-supporting-text-line-height',
  'text-field-supporting-text-size',
  'text-field-supporting-text-weight',
  'text-field-trailing-icon-color',
  'text-field-trailing-icon-size',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'menu-cascading-menu-indicator-icon-color',
  'menu-cascading-menu-indicator-icon-size',
  'menu-container-color',
  'menu-container-elevation',
  'menu-container-shadow-color',
  'menu-container-shape',
  'menu-divider-color',
  'menu-divider-height',
  'menu-list-item-container-height',
  'menu-list-item-label-text-color',
  'menu-list-item-label-text-font',
  'menu-list-item-label-text-line-height',
  'menu-list-item-label-text-size',
  'menu-list-item-label-text-tracking',
  'menu-list-item-label-text-type',
  'menu-list-item-label-text-weight',
  'menu-list-item-selected-container-color',
  'menu-list-item-with-leading-icon-leading-icon-color',
  'menu-list-item-with-leading-icon-leading-icon-size',
  'menu-list-item-with-trailing-icon-trailing-icon-color',
  'menu-list-item-with-trailing-icon-trailing-icon-size',
  'text-field-container-color',
  'text-field-error-hover-state-layer-color',
  'text-field-error-hover-state-layer-opacity',
  'text-field-hover-state-layer-color',
  'text-field-hover-state-layer-opacity',
  'text-field-input-text-tracking',
  'text-field-input-text-type',
  'text-field-label-text-tracking',
  'text-field-label-text-type',
  'text-field-supporting-text-tracking',
  'text-field-supporting-text-type',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-outlined-select.values($deps, $exclude-hardcoded-values);
  $new-tokens: shape.get-new-logical-shape-tokens(
    $tokens,
    'text-field-container-shape'
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens
  );

  $tokens: map.merge(
    $tokens,
    (
      // TODO(b/259455114): remove when focus tokens update to 3px
      'text-field-focus-outline-width': if($exclude-hardcoded-values, null, 3px)
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'text-field-container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-outlined-select-text-field-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-outlined-select-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-outlined-text-field.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-typescale';
@use './v0_192/md-comp-outlined-text-field';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'bottom-space',
  'caret-color',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'disabled-input-text-color',
  'disabled-input-text-opacity',
  'disabled-label-text-color',
  'disabled-label-text-opacity',
  'disabled-leading-icon-color',
  'disabled-leading-icon-opacity',
  'disabled-outline-color',
  'disabled-outline-opacity',
  'disabled-outline-width',
  'disabled-supporting-text-color',
  'disabled-supporting-text-opacity',
  'disabled-trailing-icon-color',
  'disabled-trailing-icon-opacity',
  'error-focus-caret-color',
  'error-focus-input-text-color',
  'error-focus-label-text-color',
  'error-focus-leading-icon-color',
  'error-focus-outline-color',
  'error-focus-supporting-text-color',
  'error-focus-trailing-icon-color',
  'error-hover-input-text-color',
  'error-hover-label-text-color',
  'error-hover-leading-icon-color',
  'error-hover-outline-color',
  'error-hover-supporting-text-color',
  'error-hover-trailing-icon-color',
  'error-input-text-color',
  'error-label-text-color',
  'error-leading-icon-color',
  'error-outline-color',
  'error-supporting-text-color',
  'error-trailing-icon-color',
  'focus-caret-color',
  'focus-input-text-color',
  'focus-label-text-color',
  'focus-leading-icon-color',
  'focus-outline-color',
  'focus-outline-width',
  'focus-supporting-text-color',
  'focus-trailing-icon-color',
  'hover-input-text-color',
  'hover-label-text-color',
  'hover-leading-icon-color',
  'hover-outline-color',
  'hover-outline-width',
  'hover-supporting-text-color',
  'hover-trailing-icon-color',
  'input-text-color',
  'input-text-font',
  'input-text-line-height',
  'input-text-placeholder-color',
  'input-text-prefix-color',
  'input-text-prefix-trailing-space',
  'input-text-size',
  'input-text-suffix-color',
  'input-text-suffix-leading-space',
  'input-text-weight',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-populated-line-height',
  'label-text-populated-size',
  'label-text-size',
  'label-text-weight',
  'leading-icon-color',
  'leading-icon-size',
  'leading-space',
  'outline-color',
  'outline-width',
  'supporting-text-color',
  'supporting-text-font',
  'supporting-text-line-height',
  'supporting-text-size',
  'supporting-text-weight',
  'top-space',
  'trailing-icon-color',
  'trailing-icon-size',
  'trailing-space',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'input-text-tracking',
  'input-text-type',
  'label-text-tracking',
  'label-text-type',
  'supporting-text-tracking',
  'supporting-text-type',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-outlined-text-field.values($deps, $exclude-hardcoded-values);
  $new-tokens: map.merge(
    shape.get-new-logical-shape-tokens($tokens, 'container-shape'),
    (
      'leading-space': if($exclude-hardcoded-values, null, 16px),
      'trailing-space': if($exclude-hardcoded-values, null, 16px),
      'top-space': if($exclude-hardcoded-values, null, 16px),
      'bottom-space': if($exclude-hardcoded-values, null, 16px),
      'input-text-prefix-trailing-space':
        if($exclude-hardcoded-values, null, 2px),
      'input-text-suffix-leading-space':
        if($exclude-hardcoded-values, null, 2px),
      // TODO(b/270705687): remove when focus-caret-color token added
      'focus-caret-color': map.get($deps, 'md-sys-color', 'primary'),
    )
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens
  );

  $tokens: map.merge(
    $tokens,
    (
      // TODO(b/259455114): remove when focus tokens update to 3px
      'focus-outline-width': if($exclude-hardcoded-values, null, 3px)
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-outlined-text-field-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-outlined-text-field-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-primary-tab.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-primary-navigation-tab';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'active-focus-icon-color',
  'active-focus-label-text-color',
  'active-hover-icon-color',
  'active-hover-label-text-color',
  'active-hover-state-layer-color',
  'active-hover-state-layer-opacity',
  'active-icon-color',
  'active-indicator-color',
  'active-indicator-height',
  'active-indicator-shape',
  'active-label-text-color',
  'active-pressed-icon-color',
  'active-pressed-label-text-color',
  'active-pressed-state-layer-color',
  'active-pressed-state-layer-opacity',
  'container-color',
  'container-elevation',
  'container-height',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'focus-icon-color',
  'focus-label-text-color',
  'hover-icon-color',
  'hover-label-text-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'pressed-icon-color',
  'pressed-label-text-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'with-icon-and-label-text-container-height',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'active-focus-state-layer-color',
  'active-focus-state-layer-opacity',
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'label-text-tracking',
  'label-text-type',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-primary-navigation-tab.values(
    $deps,
    $exclude-hardcoded-values: $exclude-hardcoded-values
  );

  $new-tokens: shape.get-new-logical-shape-tokens($tokens, 'container-shape');
  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // rename inactive-
      'inactive-focus-state-layer-color': 'focus-state-layer-color',
      'inactive-focus-state-layer-opacity': 'focus-state-layer-opacity',
      'inactive-hover-state-layer-color': 'hover-state-layer-color',
      'inactive-hover-state-layer-opacity': 'hover-state-layer-opacity',
      'inactive-pressed-state-layer-color': 'pressed-state-layer-color',
      'inactive-pressed-state-layer-opacity': 'pressed-state-layer-opacity',
      // rename with-icon- and inactive-
      'with-icon-active-focus-icon-color': 'active-focus-icon-color',
      'with-icon-active-hover-icon-color': 'active-hover-icon-color',
      'with-icon-active-icon-color': 'active-icon-color',
      'with-icon-active-pressed-icon-color': 'active-pressed-icon-color',
      'with-icon-icon-size': 'icon-size',
      'with-icon-inactive-focus-icon-color': 'focus-icon-color',
      'with-icon-inactive-hover-icon-color': 'hover-icon-color',
      'with-icon-inactive-icon-color': 'icon-color',
      'with-icon-inactive-pressed-icon-color': 'pressed-icon-color',
      // rename with-label-text- and inactive-
      'with-label-text-label-text-font': 'label-text-font',
      'with-label-text-label-text-line-height': 'label-text-line-height',
      'with-label-text-label-text-size': 'label-text-size',
      'with-label-text-label-text-tracking': 'label-text-tracking',
      'with-label-text-label-text-weight': 'label-text-weight',
      'with-label-text-active-focus-label-text-color':
        'active-focus-label-text-color',
      'with-label-text-active-hover-label-text-color':
        'active-hover-label-text-color',
      'with-label-text-active-label-text-color': 'active-label-text-color',
      'with-label-text-active-pressed-label-text-color':
        'active-pressed-label-text-color',
      'with-label-text-inactive-focus-label-text-color':
        'focus-label-text-color',
      'with-label-text-inactive-hover-label-text-color':
        'hover-label-text-color',
      'with-label-text-inactive-label-text-color': 'label-text-color',
      'with-label-text-inactive-pressed-label-text-color':
        'pressed-label-text-color',
      'with-label-text-label-text-type': 'label-text-type'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-primary-tab-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-primary-tab-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-radio.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-state';
@use './v0_192/md-comp-radio-button';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'disabled-selected-icon-color',
  'disabled-selected-icon-opacity',
  'disabled-unselected-icon-color',
  'disabled-unselected-icon-opacity',
  'focus-icon-color',
  'hover-icon-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'pressed-icon-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'selected-focus-icon-color',
  'selected-hover-icon-color',
  'selected-hover-state-layer-color',
  'selected-hover-state-layer-opacity',
  'selected-icon-color',
  'selected-pressed-icon-color',
  'selected-pressed-state-layer-color',
  'selected-pressed-state-layer-opacity',
  'state-layer-size',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'selected-focus-state-layer-color',
  'selected-focus-state-layer-opacity',
  'unselected-focus-state-layer-color',
  'unselected-focus-state-layer-opacity',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-state': md-sys-state.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: validate.values(
    md-comp-radio-button.values($deps, $exclude-hardcoded-values),
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $renamed-tokens: (
      // Remove default "unselected" prefix (b/292244480)
      'unselected-focus-icon-color': 'focus-icon-color',
      'unselected-hover-icon-color': 'hover-icon-color',
      'unselected-hover-state-layer-color': 'hover-state-layer-color',
      'unselected-hover-state-layer-opacity': 'hover-state-layer-opacity',
      'unselected-icon-color': 'icon-color',
      'unselected-pressed-icon-color': 'pressed-icon-color',
      'unselected-pressed-state-layer-color': 'pressed-state-layer-color',
      'unselected-pressed-state-layer-opacity': 'pressed-state-layer-opacity'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set($tokens, $token, var(--md-radio-#{$token}, #{$value}));
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-ripple.scss
================================================================================

//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-state';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'hover-color',
  'hover-opacity',
  'pressed-color',
  'pressed-opacity',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-state': md-sys-state.values(),
);

@function values($deps: $_default, $exclude-custom-properties: true) {
  $tokens: (
    'hover-color': map.get($deps, 'md-sys-color', 'on-surface'),
    'hover-opacity': map.get($deps, 'md-sys-state', 'hover-state-layer-opacity'),
    'pressed-color': map.get($deps, 'md-sys-color', 'on-surface'),
    'pressed-opacity':
      map.get($deps, 'md-sys-state', 'pressed-state-layer-opacity'),
  );

  $tokens: validate.values($tokens, $supported-tokens: $supported-tokens);

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set($tokens, $token, var(--md-ripple-#{$token}, #{$value}));
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-secondary-tab.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-secondary-navigation-tab';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'active-focus-icon-color',
  'active-focus-label-text-color',
  'active-hover-icon-color',
  'active-hover-label-text-color',
  'active-hover-state-layer-color',
  'active-hover-state-layer-opacity',
  'active-icon-color',
  'active-indicator-color',
  'active-indicator-height',
  'active-indicator-shape',
  'active-label-text-color',
  'active-pressed-icon-color',
  'active-pressed-label-text-color',
  'active-pressed-state-layer-color',
  'active-pressed-state-layer-opacity',
  'container-color',
  'container-elevation',
  'container-height',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'focus-icon-color',
  'focus-label-text-color',
  'hover-icon-color',
  'hover-label-text-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'pressed-icon-color',
  'pressed-label-text-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // include an icon and the size will adjust;
  // height is 48 and it's 64 with icon
  'container-shadow-color',
  'label-text-type',
  'label-text-tracking',
  'focus-state-layer-color',
  'focus-state-layer-opacity'
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-secondary-navigation-tab.values(
    $deps,
    $exclude-hardcoded-values: $exclude-hardcoded-values
  );

  $tokens: _add-missing-secondary-tokens($tokens);
  $new-tokens: shape.get-new-logical-shape-tokens($tokens, 'container-shape');

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      'inactive-label-text-color': 'label-text-color',
      'with-icon-active-icon-color': 'active-icon-color',
      'with-icon-focus-icon-color': 'focus-icon-color',
      'with-icon-hover-icon-color': 'hover-icon-color',
      'with-icon-icon-size': 'icon-size',
      'with-icon-inactive-icon-color': 'icon-color',
      'with-icon-pressed-icon-color': 'pressed-icon-color',
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-secondary-tab-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-secondary-tab-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

// add missing secondary tokens to match primary variant.
@function _add-missing-secondary-tokens($tokens) {
  $tokens: map.merge(
    $tokens,
    (
      'active-focus-icon-color': map.get($tokens, 'icon-color'),
      'active-focus-label-text-color':
        map.get($tokens, 'active-label-text-color'),
      'active-hover-icon-color': map.get($tokens, 'icon-color'),
      'active-hover-label-text-color':
        map.get($tokens, 'active-label-text-color'),
      'active-hover-state-layer-color':
        map.get($tokens, 'hover-state-layer-color'),
      'active-hover-state-layer-opacity':
        map.get($tokens, 'hover-state-layer-opacity'),
      'active-icon-color': map.get($tokens, 'icon-color'),
      'active-indicator-shape': 0,
      'active-pressed-icon-color': map.get($tokens, 'icon-color'),
      'active-pressed-label-text-color':
        map.get($tokens, 'active-label-text-color'),
      'active-pressed-state-layer-color':
        map.get($tokens, 'pressed-state-layer-color'),
      'active-pressed-state-layer-opacity':
        map.get($tokens, 'pressed-state-layer-opacity'),
    )
  );
  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-slider.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-slider';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'active-track-color',
  'active-track-height',
  'active-track-shape',
  'disabled-active-track-color',
  'disabled-active-track-opacity',
  'disabled-handle-color',
  'disabled-handle-elevation',
  'disabled-inactive-track-color',
  'disabled-inactive-track-opacity',
  'focus-handle-color',
  'handle-color',
  'handle-elevation',
  'handle-height',
  'handle-shadow-color',
  'handle-shape',
  'handle-width',
  'hover-handle-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'inactive-track-color',
  'inactive-track-height',
  'inactive-track-shape',
  'label-container-color',
  'label-container-height',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'pressed-handle-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'state-layer-size',
  'with-overlap-handle-outline-color',
  'with-overlap-handle-outline-width',
  'with-tick-marks-active-container-color',
  'with-tick-marks-container-size',
  'with-tick-marks-disabled-container-color',
  'with-tick-marks-inactive-container-color',
  // go/keep-sorted end
);

$unsupported-tokens: (
  'disabled-handle-opacity',
  'label-container-elevation',
  'label-text-type',
  'label-text-tracking',
  'track-elevation',
  // for efficiency, tick marks are rendered as radial-gradients and
  // have more limited customization
  'with-tick-marks-container-shape',
  // Due to how opacity is multiplied together in the browser, using
  // these tokens results in low contrast tick marks.
  'with-tick-marks-active-container-opacity',
  'with-tick-marks-disabled-container-opacity',
  'with-tick-marks-inactive-container-opacity',
  // focus tokens no longer used.
  'focus-state-layer-color',
  'focus-state-layer-opacity'
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: validate.values(
    md-comp-slider.values($deps, $exclude-hardcoded-values),
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $renamed-tokens: (
      'label-label-text-color': 'label-text-color',
      'label-label-text-type': 'label-text-type',
      'label-label-text-font': 'label-text-font',
      'label-label-text-line-height': 'label-text-line-height',
      'label-label-text-size': 'label-text-size',
      'label-label-text-tracking': 'label-text-tracking',
      'label-label-text-weight': 'label-text-weight',
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $tokens: map.set($tokens, $token, var(--md-slider-#{$token}, #{$value}));
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-suggestion-chip.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-elevation';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-suggestion-chip';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-height',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'disabled-label-text-color',
  'disabled-label-text-opacity',
  'disabled-leading-icon-color',
  'disabled-leading-icon-opacity',
  'disabled-outline-color',
  'disabled-outline-opacity',
  'elevated-container-color',
  'elevated-container-elevation',
  'elevated-container-shadow-color',
  'elevated-disabled-container-color',
  'elevated-disabled-container-elevation',
  'elevated-disabled-container-opacity',
  'elevated-focus-container-elevation',
  'elevated-hover-container-elevation',
  'elevated-pressed-container-elevation',
  'focus-label-text-color',
  'focus-leading-icon-color',
  'focus-outline-color',
  'hover-label-text-color',
  'hover-leading-icon-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-label-space',
  'icon-size',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'leading-icon-color',
  'leading-space',
  'outline-color',
  'outline-width',
  'pressed-label-text-color',
  'pressed-leading-icon-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'trailing-space',
  'with-leading-icon-leading-space',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'container-elevation',
  'dragged-container-elevation',
  'dragged-label-text-color',
  'dragged-leading-icon-color',
  'dragged-state-layer-color',
  'dragged-state-layer-opacity',
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'label-text-tracking',
  'label-text-type',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-elevation': md-sys-elevation.values(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-suggestion-chip.values($deps, $exclude-hardcoded-values);
  $new-tokens: map.merge(
    shape.get-new-logical-shape-tokens($tokens, 'container-shape'),
    (
      'leading-space': if($exclude-hardcoded-values, null, 16px),
      'trailing-space': if($exclude-hardcoded-values, null, 16px),
      'icon-label-space': if($exclude-hardcoded-values, null, 8px),
      'with-leading-icon-leading-space':
        if($exclude-hardcoded-values, null, 8px),
    )
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove "flat-*" prefix (b/275577569)
      'flat-container-elevation': 'container-elevation',
      'flat-disabled-outline-color': 'disabled-outline-color',
      'flat-disabled-outline-opacity': 'disabled-outline-opacity',
      'flat-focus-outline-color': 'focus-outline-color',
      'flat-outline-color': 'outline-color',
      'flat-outline-width': 'outline-width',
      // Remove "with-*" prefixes (b/273534858)
      'with-leading-icon-disabled-leading-icon-color':
        'disabled-leading-icon-color',
      'with-leading-icon-disabled-leading-icon-opacity':
        'disabled-leading-icon-opacity',
      'with-leading-icon-dragged-leading-icon-color':
        'dragged-leading-icon-color',
      'with-leading-icon-focus-leading-icon-color': 'focus-leading-icon-color',
      'with-leading-icon-hover-leading-icon-color': 'hover-leading-icon-color',
      'with-leading-icon-leading-icon-color': 'leading-icon-color',
      'with-leading-icon-pressed-leading-icon-color':
        'pressed-leading-icon-color',
      // Rename "leading-icon-size" to "icon-size" (b/275577569)
      'with-leading-icon-leading-icon-size': 'icon-size'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-suggestion-chip-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-suggestion-chip-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-switch.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-state';
@use './v0_192/md-comp-switch';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'disabled-handle-color',
  'disabled-handle-opacity',
  'disabled-icon-color',
  'disabled-icon-opacity',
  'disabled-selected-handle-color',
  'disabled-selected-handle-opacity',
  'disabled-selected-icon-color',
  'disabled-selected-icon-opacity',
  'disabled-selected-track-color',
  'disabled-track-color',
  'disabled-track-opacity',
  'disabled-track-outline-color',
  'focus-handle-color',
  'focus-icon-color',
  'focus-track-color',
  'focus-track-outline-color',
  'handle-color',
  'handle-height',
  'handle-shape',
  'handle-shape-end-end',
  'handle-shape-end-start',
  'handle-shape-start-end',
  'handle-shape-start-start',
  'handle-width',
  'hover-handle-color',
  'hover-icon-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'hover-track-color',
  'hover-track-outline-color',
  'icon-color',
  'icon-size',
  'pressed-handle-color',
  'pressed-handle-height',
  'pressed-handle-width',
  'pressed-icon-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'pressed-track-color',
  'pressed-track-outline-color',
  'selected-focus-handle-color',
  'selected-focus-icon-color',
  'selected-focus-track-color',
  'selected-handle-color',
  'selected-handle-height',
  'selected-handle-width',
  'selected-hover-handle-color',
  'selected-hover-icon-color',
  'selected-hover-state-layer-color',
  'selected-hover-state-layer-opacity',
  'selected-hover-track-color',
  'selected-icon-color',
  'selected-icon-size',
  'selected-pressed-handle-color',
  'selected-pressed-icon-color',
  'selected-pressed-state-layer-color',
  'selected-pressed-state-layer-opacity',
  'selected-pressed-track-color',
  'selected-track-color',
  'state-layer-shape',
  'state-layer-size',
  'track-color',
  'track-height',
  'track-outline-color',
  'track-outline-width',
  'track-shape',
  'track-shape-end-end',
  'track-shape-end-start',
  'track-shape-start-end',
  'track-shape-start-start',
  'track-width',
  'with-icon-handle-height',
  'with-icon-handle-width',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'selected-focus-state-layer-color',
  'selected-focus-state-layer-opacity',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-switch.values($deps, $exclude-hardcoded-values);
  $new-tokens: shape.get-new-logical-shape-tokens(
    $tokens,
    'handle-shape',
    'track-shape'
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove default "unselected" prefix (b/292244480)
      'disabled-unselected-handle-color': 'disabled-handle-color',
      'disabled-unselected-handle-opacity': 'disabled-handle-opacity',
      'disabled-unselected-icon-color': 'disabled-icon-color',
      'disabled-unselected-icon-opacity': 'disabled-icon-opacity',
      'disabled-unselected-track-color': 'disabled-track-color',
      'disabled-unselected-track-outline-color': 'disabled-track-outline-color',
      'unselected-focus-handle-color': 'focus-handle-color',
      'unselected-focus-icon-color': 'focus-icon-color',
      'unselected-focus-state-layer-color': 'focus-state-layer-color',
      'unselected-focus-state-layer-opacity': 'focus-state-layer-opacity',
      'unselected-focus-track-color': 'focus-track-color',
      'unselected-focus-track-outline-color': 'focus-track-outline-color',
      'unselected-handle-color': 'handle-color',
      'unselected-handle-height': 'handle-height',
      'unselected-handle-width': 'handle-width',
      'unselected-hover-handle-color': 'hover-handle-color',
      'unselected-hover-icon-color': 'hover-icon-color',
      'unselected-hover-state-layer-color': 'hover-state-layer-color',
      'unselected-hover-state-layer-opacity': 'hover-state-layer-opacity',
      'unselected-hover-track-color': 'hover-track-color',
      'unselected-hover-track-outline-color': 'hover-track-outline-color',
      'unselected-icon-color': 'icon-color',
      'unselected-icon-size': 'icon-size',
      'unselected-pressed-handle-color': 'pressed-handle-color',
      'unselected-pressed-icon-color': 'pressed-icon-color',
      'unselected-pressed-state-layer-color': 'pressed-state-layer-color',
      'unselected-pressed-state-layer-opacity': 'pressed-state-layer-opacity',
      'unselected-pressed-track-color': 'pressed-track-color',
      'unselected-pressed-track-outline-color': 'pressed-track-outline-color',
      'unselected-track-color': 'track-color',
      'unselected-track-outline-color': 'track-outline-color'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      $shape-tokens: ('handle-shape', 'track-shape');
      @each $shape-token in $shape-tokens {
        @if string.index($token, '#{$shape-token}-') == 1 {
          // Add fallback to shorthand for logical shape properties.
          $value: var(--md-switch-#{$shape-token}, #{$value});
        }
      }

      $tokens: map.set($tokens, $token, var(--md-switch-#{$token}, #{$value}));
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-test-table.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './md-sys-color';
@use './md-sys-typescale';
// go/keep-sorted end

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values($deps: $_default) {
  @return (
    'cell-color': map.get($deps, 'md-sys-color', 'surface-container-lowest'),
    'cell-position': 'relative',
    'cell-text-color': map.get($deps, 'md-sys-color', 'on-surface'),
    'cell-text-font': map.get($deps, 'md-sys-typescale', 'body-medium-font'),
    'cell-text-size': map.get($deps, 'md-sys-typescale', 'body-medium-size'),
    'cell-text-line-height':
      map.get($deps, 'md-sys-typescale', 'body-medium-line-height'),
    'cell-text-weight': map.get($deps, 'md-sys-typescale', 'body-medium-weight'),
    'cell-grid-color': map.get($deps, 'md-sys-color', 'surface-variant'),
    'header-cell-color': map.get($deps, 'md-sys-color', 'surface-variant'),
    'header-cell-text-color':
      map.get($deps, 'md-sys-color', 'on-surface-variant'),
    'header-cell-text-font':
      map.get($deps, 'md-sys-typescale', 'title-medium-font'),
    'header-cell-text-size':
      map.get($deps, 'md-sys-typescale', 'title-medium-size'),
    'header-cell-text-line-height':
      map.get($deps, 'md-sys-typescale', 'title-medium-line-height'),
    'header-cell-text-weight':
      map.get($deps, 'md-sys-typescale', 'title-medium-weight'),
    'outline-color': map.get($deps, 'md-sys-color', 'outline')
  );
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-comp-text-button.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/shape';
@use './internal/validate';
@use './md-sys-color';
@use './md-sys-shape';
@use './md-sys-state';
@use './md-sys-typescale';
@use './v0_192/md-comp-text-button';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'container-height',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'disabled-icon-color',
  'disabled-icon-opacity',
  'disabled-label-text-color',
  'disabled-label-text-opacity',
  'focus-icon-color',
  'focus-label-text-color',
  'hover-icon-color',
  'hover-label-text-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'label-text-color',
  'label-text-font',
  'label-text-line-height',
  'label-text-size',
  'label-text-weight',
  'leading-space',
  'pressed-icon-color',
  'pressed-label-text-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'trailing-space',
  'with-leading-icon-leading-space',
  'with-leading-icon-trailing-space',
  'with-trailing-icon-leading-space',
  'with-trailing-icon-trailing-space',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'label-text-tracking',
  'label-text-type',
  // go/keep-sorted end
);

$_default: (
  'md-sys-color': md-sys-color.values-light(),
  'md-sys-shape': md-sys-shape.values(),
  'md-sys-state': md-sys-state.values(),
  'md-sys-typescale': md-sys-typescale.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true
) {
  $tokens: md-comp-text-button.values($deps, $exclude-hardcoded-values);
  $new-tokens: map.merge(
    shape.get-new-logical-shape-tokens($tokens, 'container-shape'),
    (
      // b/198759625 - Remove once spacing tokens are formally added
      // go/keep-sorted start
      'leading-space': if($exclude-hardcoded-values, null, 12px),
      'trailing-space': if($exclude-hardcoded-values, null, 12px),
      'with-leading-icon-leading-space':
        if($exclude-hardcoded-values, null, 12px),
      'with-leading-icon-trailing-space':
        if($exclude-hardcoded-values, null, 16px),
      'with-trailing-icon-leading-space':
        if($exclude-hardcoded-values, null, 16px),
      'with-trailing-icon-trailing-space':
        if($exclude-hardcoded-values, null, 12px),
      // go/keep-sorted end
    )
  );

  $tokens: validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens,
    $new-tokens: $new-tokens,
    $renamed-tokens: (
      // Remove "with-*" prefixes (b/273534858)
      'with-icon-disabled-icon-color': 'disabled-icon-color',
      'with-icon-disabled-icon-opacity': 'disabled-icon-opacity',
      'with-icon-focus-icon-color': 'focus-icon-color',
      'with-icon-hover-icon-color': 'hover-icon-color',
      'with-icon-icon-color': 'icon-color',
      'with-icon-icon-size': 'icon-size',
      'with-icon-pressed-icon-color': 'pressed-icon-color'
    )
  );

  // Default to `$exclude-custom-properties: false` in the next breaking change.
  // See b/321816473.
  @if not $exclude-custom-properties {
    @each $token, $value in $tokens {
      @if string.index($token, 'container-shape-') == 1 {
        // Add fallback to shorthand for logical shape properties.
        $value: var(--md-text-button-container-shape, #{$value});
      }

      $tokens: map.set(
        $tokens,
        $token,
        var(--md-text-button-#{$token}, #{$value})
      );
    }
  }

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-ref-palette.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use './internal/validate';
@use './v0_192/md-ref-palette';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'black',
  'error0',
  'error10',
  'error100',
  'error20',
  'error30',
  'error40',
  'error50',
  'error60',
  'error70',
  'error80',
  'error90',
  'error95',
  'error99',
  'neutral-variant0',
  'neutral-variant10',
  'neutral-variant100',
  'neutral-variant20',
  'neutral-variant30',
  'neutral-variant40',
  'neutral-variant50',
  'neutral-variant60',
  'neutral-variant70',
  'neutral-variant80',
  'neutral-variant90',
  'neutral-variant95',
  'neutral-variant99',
  'neutral0',
  'neutral10',
  'neutral100',
  'neutral12',
  'neutral17',
  'neutral20',
  'neutral22',
  'neutral24',
  'neutral30',
  'neutral4',
  'neutral40',
  'neutral50',
  'neutral6',
  'neutral60',
  'neutral70',
  'neutral80',
  'neutral87',
  'neutral90',
  'neutral92',
  'neutral94',
  'neutral95',
  'neutral96',
  'neutral98',
  'neutral99',
  'primary0',
  'primary10',
  'primary100',
  'primary20',
  'primary30',
  'primary40',
  'primary50',
  'primary60',
  'primary70',
  'primary80',
  'primary90',
  'primary95',
  'primary99',
  'secondary0',
  'secondary10',
  'secondary100',
  'secondary20',
  'secondary30',
  'secondary40',
  'secondary50',
  'secondary60',
  'secondary70',
  'secondary80',
  'secondary90',
  'secondary95',
  'secondary99',
  'tertiary0',
  'tertiary10',
  'tertiary100',
  'tertiary20',
  'tertiary30',
  'tertiary40',
  'tertiary50',
  'tertiary60',
  'tertiary70',
  'tertiary80',
  'tertiary90',
  'tertiary95',
  'tertiary99',
  'white',
  // go/keep-sorted end
);

@function values($exclude-hardcoded-values: false) {
  @return validate.values(
    md-ref-palette.values($exclude-hardcoded-values),
    $supported-tokens: $supported-tokens
  );
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-ref-typeface.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './v0_192/md-ref-typeface';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'brand',
  'plain',
  'weight-bold',
  'weight-medium',
  'weight-regular',
  // go/keep-sorted end
);

@function values(
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: false
) {
  $tokens: md-ref-typeface.values(
    $exclude-hardcoded-values: $exclude-hardcoded-values,
  );

  @if not $exclude-custom-properties {
    // Create --md-ref-typeface-* custom properties
    @each $token, $value in $tokens {
      @if $value != null {
        $tokens: map.set(
          $tokens,
          $token,
          var(--md-ref-typeface-#{$token}, #{$value})
        );
      }
    }
  }

  @return validate.values($tokens, $supported-tokens: $supported-tokens);
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-sys-color.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-ref-palette';
@use './v0_192/md-sys-color';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'background',
  'error',
  'error-container',
  'inverse-on-surface',
  'inverse-primary',
  'inverse-surface',
  'on-background',
  'on-error',
  'on-error-container',
  'on-primary',
  'on-primary-container',
  'on-primary-fixed',
  'on-primary-fixed-variant',
  'on-secondary',
  'on-secondary-container',
  'on-secondary-fixed',
  'on-secondary-fixed-variant',
  'on-surface',
  'on-surface-variant',
  'on-tertiary',
  'on-tertiary-container',
  'on-tertiary-fixed',
  'on-tertiary-fixed-variant',
  'outline',
  'outline-variant',
  'primary',
  'primary-container',
  'primary-fixed',
  'primary-fixed-dim',
  'scrim',
  'secondary',
  'secondary-container',
  'secondary-fixed',
  'secondary-fixed-dim',
  'shadow',
  'surface',
  'surface-bright',
  'surface-container',
  'surface-container-high',
  'surface-container-highest',
  'surface-container-low',
  'surface-container-lowest',
  'surface-dim',
  'surface-tint',
  'surface-variant',
  'tertiary',
  'tertiary-container',
  'tertiary-fixed',
  'tertiary-fixed-dim',
  // go/keep-sorted end
);

$_default-dark: (
  'md-ref-palette': md-ref-palette.values(),
);

@function values-dark(
  $deps: $_default-dark,
  $exclude-custom-properties: false
) {
  $tokens: md-sys-color.values-dark($deps);

  @if not $exclude-custom-properties {
    // Create --md-sys-color-* custom properties
    @each $token, $value in $tokens {
      @if $value != null {
        $tokens: map.set(
          $tokens,
          $token,
          var(--md-sys-color-#{$token}, #{$value})
        );
      }
    }
  }

  @return validate.values($tokens, $supported-tokens: $supported-tokens);
}

$_default-light: (
  'md-ref-palette': md-ref-palette.values(),
);

@function values-light(
  $deps: $_default-light,
  $exclude-custom-properties: false
) {
  $tokens: md-sys-color.values-light($deps);

  @if not $exclude-custom-properties {
    // Create --md-sys-color-* custom properties
    @each $token, $value in $tokens {
      @if $value != null {
        $tokens: map.set(
          $tokens,
          $token,
          var(--md-sys-color-#{$token}, #{$value})
        );
      }
    }
  }

  @return validate.values($tokens, $supported-tokens: $supported-tokens);
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-sys-elevation.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './v0_192/md-sys-elevation';
// go/keep-sorted end

@function values($exclude-hardcoded-values: false) {
  $tokens: md-sys-elevation.values($exclude-hardcoded-values);
  $tokens: map.merge(
    $tokens,
    (
      // Elevation levels on web should use the level number, not the dp value.
      // We can remove this if the generated tokens swap from dp to level. See
      // b/261602454.
      'level0': if($exclude-hardcoded-values, null, 0),
      'level1': if($exclude-hardcoded-values, null, 1),
      'level2': if($exclude-hardcoded-values, null, 2),
      'level3': if($exclude-hardcoded-values, null, 3),
      'level4': if($exclude-hardcoded-values, null, 4),
      'level5': if($exclude-hardcoded-values, null, 5)
    )
  );

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-sys-motion.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use './v0_192/md-sys-motion';
// go/keep-sorted end

@function values($exclude-hardcoded-values: false) {
  @return md-sys-motion.values($exclude-hardcoded-values);
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-sys-shape.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './v0_192/md-sys-shape';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'corner-extra-large',
  'corner-extra-small',
  'corner-full',
  'corner-large',
  'corner-medium',
  'corner-none',
  'corner-small',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'corner-extra-large-top',
  'corner-extra-small-top',
  'corner-large-end',
  'corner-large-start',
  'corner-large-top',
  // go/keep-sorted end
);

@function values(
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: false
) {
  $original-tokens: md-sys-shape.values($exclude-hardcoded-values);
  $tokens: validate.values(
    $original-tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens
  );

  @if not $exclude-custom-properties {
    // Create --md-sys-shape-* custom properties
    @each $token, $value in $tokens {
      @if $value != null {
        $tokens: map.set(
          $tokens,
          $token,
          var(--md-sys-shape-#{$token}, #{$value})
        );
      }
    }
  }

  // Add multi-corner shape tokens purely for other Sass token APIs. These do
  // not represent real token custom properties that can be set (there is no
  // `--md-sys-shape-corner-extra-large-top` custom property).
  // Instead, these are shorthand values that point to single-corner custom
  // properties for usage in Sass component token mappings.
  $tokens: map.merge(
    $tokens,
    (
      'corner-extra-large-top': (
        map.get($tokens, 'corner-extra-large'),
        map.get($tokens, 'corner-extra-large'),
        map.get($tokens, 'corner-none'),
        map.get($tokens, 'corner-none'),
      ),
      'corner-extra-small-top': (
        map.get($tokens, 'corner-extra-small'),
        map.get($tokens, 'corner-extra-small'),
        map.get($tokens, 'corner-none'),
        map.get($tokens, 'corner-none'),
      ),
      'corner-large-end': (
        map.get($tokens, 'corner-none'),
        map.get($tokens, 'corner-large'),
        map.get($tokens, 'corner-large'),
        map.get($tokens, 'corner-none'),
      ),
      'corner-large-start': (
        map.get($tokens, 'corner-large'),
        map.get($tokens, 'corner-none'),
        map.get($tokens, 'corner-none'),
        map.get($tokens, 'corner-large'),
      ),
      'corner-large-top': (
        map.get($tokens, 'corner-large'),
        map.get($tokens, 'corner-large'),
        map.get($tokens, 'corner-none'),
        map.get($tokens, 'corner-none'),
      ),
    )
  );

  @return $tokens;
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-sys-state.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use './v0_192/md-sys-state';
// go/keep-sorted end

@function values($exclude-hardcoded-values: false) {
  @return md-sys-state.values($exclude-hardcoded-values);
}

================================================================================
File: C:\Users\marci\Documents\GitHub\receipts-manager\node_modules\@material\web\tokens\_md-sys-typescale.scss
================================================================================

//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use './internal/validate';
@use './md-ref-typeface';
@use './v0_192/md-sys-typescale';
// go/keep-sorted end

$supported-tokens: (
  // go/keep-sorted start
  'body-large-font',
  'body-large-line-height',
  'body-large-size',
  'body-large-weight',
  'body-medium-font',
  'body-medium-line-height',
  'body-medium-size',
  'body-medium-weight',
  'body-small-font',
  'body-small-line-height',
  'body-small-size',
  'body-small-weight',
  'display-large-font',
  'display-large-line-height',
  'display-large-size',
  'display-large-weight',
  'display-medium-font',
  'display-medium-line-height',
  'display-medium-size',
  'display-medium-weight',
  'display-small-font',
  'display-small-line-height',
  'display-small-size',
  'display-small-weight',
  'headline-large-font',
  'headline-large-line-height',
  'headline-large-size',
  'headline-large-weight',
  'headline-medium-font',
  'headline-medium-line-height',
  'headline-medium-size',
  'headline-medium-weight',
  'headline-small-font',
  'headline-small-line-height',
  'headline-small-size',
  'headline-small-weight',
  'label-large-font',
  'label-large-line-height',
  'label-large-size',
  'label-large-weight',
  'label-large-weight-prominent',
  'label-medium-font',
  'label-medium-line-height',
  'label-medium-size',
  'label-medium-weight',
  'label-medium-weight-prominent',
  'label-small-font',
  'label-small-line-height',
  'label-small-size',
  'label-small-weight',
  'title-large-font',
  'title-large-line-height',
  'title-large-size',
  'title-large-weight',
  'title-medium-font',
  'title-medium-line-height',
  'title-medium-size',
  'title-medium-weight',
  'title-small-font',
  'title-small-line-height',
  'title-small-size',
  'title-small-weight',
  // go/keep-sorted end
);

$unsupported-tokens: (
  // go/keep-sorted start
  'body-large',
  'body-large-tracking',
  'body-medium',
  'body-medium-tracking',
  'body-small',
  'body-small-tracking',
  'display-large',
  'display-large-tracking',
  'display-medium',
  'display-medium-tracking',
  'display-small',
  'display-small-tracking',
  'headline-large',
  'headline-large-tracking',
  'headline-medium',
  'headline-medium-tracking',
  'headline-small',
  'headline-small-tracking',
  'label-large',
  'label-large-tracking',
  'label-medium',
  'label-medium-tracking',
  'label-small',
  'label-small-tracking',
  'title-large',
  'title-large-tracking',
  'title-medium',
  'title-medium-tracking',
  'title-small',
  'title-small-tracking',
  // go/keep-sorted end
);

$_default: (
  'md-ref-typeface': md-ref-typeface.values(),
);

@function values(
  $deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: false
) {
  $tokens: md-sys-typescale.values(
    $deps,
    $exclude-hardcoded-values: $exclude-hardcoded-values
  );

  @if not $exclude-custom-properties {
    // Create --md-sys-typescale-* custom properties
    @each $token, $value in $tokens {
      @if $value != null {
        $tokens: map.set(
          $tokens,
          $token,
          var(--md-sys-typescale-#{$token}, #{$value})
        );
      }
    }
  }

  @return validate.values(
    $tokens,
    $supported-tokens: $supported-tokens,
    $unsupported-tokens: $unsupported-tokens
  );
}
